// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Orso.Arpa.Persistence.DataAccess;

namespace Orso.Arpa.Persistence.Migrations
{
    [DbContext(typeof(ArpaContext))]
    [Migration("20210603125430_CorrectedInstrumentPartCountSeed")]
    partial class CorrectedInstrumentPartCountSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text")
                        .HasColumnName("claim_value");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_role_claims");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_asp_net_role_claims_role_id");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text")
                        .HasColumnName("claim_type");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text")
                        .HasColumnName("claim_value");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_user_claims");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_asp_net_user_claims_user_id");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text")
                        .HasColumnName("login_provider");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text")
                        .HasColumnName("provider_key");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text")
                        .HasColumnName("provider_display_name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_asp_net_user_logins");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_asp_net_user_logins_user_id");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_asp_net_user_roles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_asp_net_user_roles_role_id");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text")
                        .HasColumnName("login_provider");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_asp_net_user_tokens");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("address2");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("discriminator");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uuid")
                        .HasColumnName("region_id");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("state");

                    b.Property<string>("UrbanDistrict")
                        .HasColumnType("text")
                        .HasColumnName("urban_district");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("zip");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("RegionId")
                        .HasDatabaseName("ix_addresses_region_id");

                    b.ToTable("addresses");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Address");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AuditionId")
                        .HasColumnType("uuid")
                        .HasColumnName("audition_id");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_time");

                    b.Property<Guid?>("ExpectationId")
                        .HasColumnType("uuid")
                        .HasColumnName("expectation_id");

                    b.Property<string>("InternalDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("internal_details");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("PublicDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("public_details");

                    b.Property<Guid?>("SalaryId")
                        .HasColumnType("uuid")
                        .HasColumnName("salary_id");

                    b.Property<Guid?>("SalaryPatternId")
                        .HasColumnType("uuid")
                        .HasColumnName("salary_pattern_id");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_time");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("status_id");

                    b.Property<Guid?>("VenueId")
                        .HasColumnType("uuid")
                        .HasColumnName("venue_id");

                    b.HasKey("Id")
                        .HasName("pk_appointments");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_appointments_category_id");

                    b.HasIndex("ExpectationId")
                        .HasDatabaseName("ix_appointments_expectation_id");

                    b.HasIndex("SalaryId")
                        .HasDatabaseName("ix_appointments_salary_id");

                    b.HasIndex("SalaryPatternId")
                        .HasDatabaseName("ix_appointments_salary_pattern_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_appointments_status_id");

                    b.HasIndex("VenueId")
                        .HasDatabaseName("ix_appointments_venue_id");

                    b.ToTable("appointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentParticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("appointment_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("person_id");

                    b.Property<Guid?>("PredictionId")
                        .HasColumnType("uuid")
                        .HasColumnName("prediction_id");

                    b.Property<Guid?>("ResultId")
                        .HasColumnType("uuid")
                        .HasColumnName("result_id");

                    b.HasKey("Id")
                        .HasName("pk_appointment_participations");

                    b.HasIndex("AppointmentId")
                        .HasDatabaseName("ix_appointment_participations_appointment_id");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_appointment_participations_person_id");

                    b.HasIndex("PredictionId")
                        .HasDatabaseName("ix_appointment_participations_prediction_id");

                    b.HasIndex("ResultId")
                        .HasDatabaseName("ix_appointment_participations_result_id");

                    b.ToTable("appointment_participations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentRoom", b =>
                {
                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("appointment_id");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("AppointmentId", "RoomId")
                        .HasName("pk_appointment_rooms");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_appointment_rooms_room_id");

                    b.ToTable("appointment_rooms");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ChangedColumns")
                        .HasColumnType("text")
                        .HasColumnName("changed_columns");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("KeyValues")
                        .HasColumnType("text")
                        .HasColumnName("key_values");

                    b.Property<string>("NewValues")
                        .HasColumnType("text")
                        .HasColumnName("new_values");

                    b.Property<string>("OldValues")
                        .HasColumnType("text")
                        .HasColumnName("old_values");

                    b.Property<string>("TableName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("table_name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_audit_logs");

                    b.ToTable("audit_logs");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Audition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AppointmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("appointment_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("InnerComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("inner_comment");

                    b.Property<string>("InternalComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("internal_comment");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<string>("Repertoire")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("repertoire");

                    b.Property<Guid?>("RepetitorStatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("repetitor_status_id");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("status_id");

                    b.HasKey("Id")
                        .HasName("pk_auditions");

                    b.HasIndex("AppointmentId")
                        .IsUnique()
                        .HasDatabaseName("ix_auditions_appointment_id");

                    b.HasIndex("MusicianProfileId")
                        .HasDatabaseName("ix_auditions_musician_profile_id");

                    b.HasIndex("RepetitorStatusId")
                        .HasDatabaseName("ix_auditions_repetitor_status_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_auditions_status_id");

                    b.ToTable("auditions");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AvailableDocument", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("SelectValueMappingId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_mapping_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("MusicianProfileId", "SelectValueMappingId")
                        .HasName("pk_available_documents");

                    b.HasIndex("SelectValueMappingId")
                        .HasDatabaseName("ix_available_documents_select_value_mapping_id");

                    b.ToTable("available_documents");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.CurriculumVitaeReference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Details")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("details");

                    b.Property<string>("Keyword")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("keyword");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<byte>("SortOrder")
                        .HasColumnType("smallint")
                        .HasColumnName("sort_order");

                    b.Property<string>("Timespan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("timespan");

                    b.HasKey("Id")
                        .HasName("pk_curriculum_vitae_reference");

                    b.ToTable("curriculum_vitae_reference");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Institution")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("institution");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<byte>("SortOrder")
                        .HasColumnType("smallint")
                        .HasColumnName("sort_order");

                    b.Property<string>("Timespan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("timespan");

                    b.HasKey("Id")
                        .HasName("pk_educations");

                    b.ToTable("educations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BackgroundPerformer")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("background_performer");

                    b.Property<string>("BackgroundStaff")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("background_staff");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid?>("InquiryStatusPerformerId")
                        .HasColumnType("uuid")
                        .HasColumnName("inquiry_status_performer_id");

                    b.Property<Guid?>("InquiryStatusStaffId")
                        .HasColumnType("uuid")
                        .HasColumnName("inquiry_status_staff_id");

                    b.Property<Guid>("InstrumentId")
                        .HasColumnType("uuid")
                        .HasColumnName("instrument_id");

                    b.Property<bool>("IsDeactivated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deactivated");

                    b.Property<bool>("IsMainProfile")
                        .HasColumnType("boolean")
                        .HasColumnName("is_main_profile");

                    b.Property<byte>("LevelAssessmentPerformer")
                        .HasColumnType("smallint")
                        .HasColumnName("level_assessment_performer");

                    b.Property<byte>("LevelAssessmentStaff")
                        .HasColumnType("smallint")
                        .HasColumnName("level_assessment_staff");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("person_id");

                    b.Property<byte[]>("PreferredPartsPerformer")
                        .HasColumnType("bytea")
                        .HasColumnName("preferred_parts_performer");

                    b.Property<byte[]>("PreferredPartsStaff")
                        .HasColumnType("bytea")
                        .HasColumnName("preferred_parts_staff");

                    b.Property<byte>("ProfilePreferencePerformer")
                        .HasColumnType("smallint")
                        .HasColumnName("profile_preference_performer");

                    b.Property<byte>("ProfilePreferenceStaff")
                        .HasColumnType("smallint")
                        .HasColumnName("profile_preference_staff");

                    b.Property<Guid?>("QualificationId")
                        .HasColumnType("uuid")
                        .HasColumnName("qualification_id");

                    b.Property<string>("SalaryComment")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("salary_comment");

                    b.Property<Guid?>("SalaryId")
                        .HasColumnType("uuid")
                        .HasColumnName("salary_id");

                    b.HasKey("Id")
                        .HasName("pk_musician_profiles");

                    b.HasIndex("InquiryStatusPerformerId")
                        .HasDatabaseName("ix_musician_profiles_inquiry_status_performer_id");

                    b.HasIndex("InquiryStatusStaffId")
                        .HasDatabaseName("ix_musician_profiles_inquiry_status_staff_id");

                    b.HasIndex("InstrumentId")
                        .HasDatabaseName("ix_musician_profiles_instrument_id");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_musician_profiles_person_id");

                    b.HasIndex("QualificationId")
                        .HasDatabaseName("ix_musician_profiles_qualification_id");

                    b.HasIndex("SalaryId")
                        .HasDatabaseName("ix_musician_profiles_salary_id");

                    b.ToTable("musician_profiles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfileCurriculumVitaeReference", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("CurriculumVitaeReferenceId")
                        .HasColumnType("uuid")
                        .HasColumnName("curriculum_vitae_reference_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("MusicianProfileId", "CurriculumVitaeReferenceId")
                        .HasName("pk_musician_profile_curriculum_vitae_references");

                    b.HasIndex("CurriculumVitaeReferenceId")
                        .HasDatabaseName("ix_musician_profile_curriculum_vitae_references_curriculum_vit");

                    b.ToTable("musician_profile_curriculum_vitae_references");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfileEducation", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("EducationId")
                        .HasColumnType("uuid")
                        .HasColumnName("education_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("MusicianProfileId", "EducationId")
                        .HasName("pk_musician_profile_educations");

                    b.HasIndex("EducationId")
                        .HasDatabaseName("ix_musician_profile_educations_education_id");

                    b.ToTable("musician_profile_educations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfilePositionPerformer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("SelectValueSectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_section_id");

                    b.HasKey("Id")
                        .HasName("pk_musician_profile_positions_performer");

                    b.HasIndex("MusicianProfileId")
                        .HasDatabaseName("ix_musician_profile_positions_performer_musician_profile_id");

                    b.HasIndex("SelectValueSectionId")
                        .HasDatabaseName("ix_musician_profile_positions_performer_select_value_section_id");

                    b.ToTable("musician_profile_positions_performer");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfilePositionStaff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("SelectValueSectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_section_id");

                    b.HasKey("Id")
                        .HasName("pk_musician_profile_positions_staff");

                    b.HasIndex("MusicianProfileId")
                        .HasDatabaseName("ix_musician_profile_positions_staff_musician_profile_id");

                    b.HasIndex("SelectValueSectionId")
                        .HasDatabaseName("ix_musician_profile_positions_staff_select_value_section_id");

                    b.ToTable("musician_profile_positions_staff");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfileSection", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("section_id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("InstrumentAvailabilityId")
                        .HasColumnType("uuid")
                        .HasColumnName("instrument_availability_id");

                    b.Property<byte>("LevelAssessmentPerformer")
                        .HasColumnType("smallint")
                        .HasColumnName("level_assessment_performer");

                    b.Property<byte>("LevelAssessmentStaff")
                        .HasColumnType("smallint")
                        .HasColumnName("level_assessment_staff");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("MusicianProfileId", "SectionId")
                        .HasName("pk_musician_profile_sections");

                    b.HasIndex("InstrumentAvailabilityId")
                        .HasDatabaseName("ix_musician_profile_sections_instrument_availability_id");

                    b.HasIndex("SectionId")
                        .HasDatabaseName("ix_musician_profile_sections_section_id");

                    b.ToTable("musician_profile_sections");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AboutMe")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("about_me");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<byte>("Favorization")
                        .HasColumnType("smallint")
                        .HasColumnName("favorization");

                    b.Property<string>("GivenName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("given_name");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<byte>("Reliability")
                        .HasColumnType("smallint")
                        .HasColumnName("reliability");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_persons");

                    b.ToTable("persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56ed7c20-ba78-4a02-936e-5e840ef0748c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Favorization = (byte)0,
                            GivenName = "Initial",
                            Reliability = (byte)0,
                            Surname = "Admin"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PersonSection", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("person_id");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("section_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("PersonId", "SectionId")
                        .HasName("pk_person_sections");

                    b.HasIndex("SectionId")
                        .HasDatabaseName("ix_person_sections_section_id");

                    b.ToTable("person_sections");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PreferredGenre", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("SelectValueMappingId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_mapping_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("MusicianProfileId", "SelectValueMappingId")
                        .HasName("pk_preferred_genres");

                    b.HasIndex("SelectValueMappingId")
                        .HasDatabaseName("ix_preferred_genres_select_value_mapping_id");

                    b.ToTable("preferred_genres");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("uuid")
                        .HasColumnName("genre_id");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_completed");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("short_title");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uuid")
                        .HasColumnName("state_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_projects");

                    b.HasIndex("Code")
                        .HasDatabaseName("ix_projects_code");

                    b.HasIndex("GenreId")
                        .HasDatabaseName("ix_projects_genre_id");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_projects_parent_id");

                    b.HasIndex("StateId")
                        .HasDatabaseName("ix_projects_state_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_projects_type_id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectAppointment", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("project_id");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("appointment_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("ProjectId", "AppointmentId")
                        .HasName("pk_project_appointments");

                    b.HasIndex("AppointmentId")
                        .HasDatabaseName("ix_project_appointments_appointment_id");

                    b.ToTable("project_appointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectParticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CommentByPerformerInner")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("comment_by_performer_inner");

                    b.Property<string>("CommentByStaffInner")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("comment_by_staff_inner");

                    b.Property<string>("CommentTeam")
                        .HasColumnType("text")
                        .HasColumnName("comment_team");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid?>("InvitationStatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("invitation_status_id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid?>("ParticipationStatusInnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("participation_status_inner_id");

                    b.Property<Guid?>("ParticipationStatusInternalId")
                        .HasColumnType("uuid")
                        .HasColumnName("participation_status_internal_id");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("project_id");

                    b.HasKey("Id")
                        .HasName("pk_project_participations");

                    b.HasIndex("InvitationStatusId")
                        .HasDatabaseName("ix_project_participations_invitation_status_id");

                    b.HasIndex("MusicianProfileId")
                        .HasDatabaseName("ix_project_participations_musician_profile_id");

                    b.HasIndex("ParticipationStatusInnerId")
                        .HasDatabaseName("ix_project_participations_participation_status_inner_id");

                    b.HasIndex("ParticipationStatusInternalId")
                        .HasDatabaseName("ix_project_participations_participation_status_internal_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_project_participations_project_id");

                    b.ToTable("project_participations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by_ip");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_on");

                    b.Property<DateTime>("ExpiryOn")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expiry_on");

                    b.Property<string>("RevokedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("revoked_by_ip");

                    b.Property<DateTime>("RevokedOn")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("revoked_on");

                    b.Property<string>("Token")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("token");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_refresh_tokens");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_refresh_tokens_user_id");

                    b.ToTable("refresh_tokens");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_regions");

                    b.ToTable("regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e6c559e-8d50-488d-a1ea-5dbc0f44ba9b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Freiburg"
                        },
                        new
                        {
                            Id = new Guid("ac9544e3-e756-486c-a1dc-62988a882ac2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Stuttgart"
                        },
                        new
                        {
                            Id = new Guid("ca3c9cce-1aee-4c50-93e1-be963542741a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Berlin"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RegionPreferencePerformance", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uuid")
                        .HasColumnName("venue_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<byte>("Rating")
                        .HasColumnType("smallint")
                        .HasColumnName("rating");

                    b.HasKey("MusicianProfileId", "VenueId")
                        .HasName("pk_region_preferences_performance");

                    b.HasIndex("VenueId")
                        .HasDatabaseName("ix_region_preferences_performance_venue_id");

                    b.ToTable("region_preferences_performance");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RegionPreferenceRehearsal", b =>
                {
                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("musician_profile_id");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uuid")
                        .HasColumnName("venue_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<byte>("Rating")
                        .HasColumnType("smallint")
                        .HasColumnName("rating");

                    b.HasKey("MusicianProfileId", "VenueId")
                        .HasName("pk_region_preferences_rehearsal");

                    b.HasIndex("VenueId")
                        .HasDatabaseName("ix_region_preferences_rehearsal_venue_id");

                    b.ToTable("region_preferences_rehearsal");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<short>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalized_name");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_roles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("building");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("floor");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uuid")
                        .HasColumnName("venue_id");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.HasIndex("VenueId")
                        .HasDatabaseName("ix_rooms_venue_id");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<byte>("InstrumentPartCount")
                        .HasColumnType("smallint")
                        .HasColumnName("instrument_part_count");

                    b.Property<bool>("IsInstrument")
                        .HasColumnType("boolean")
                        .HasColumnName("is_instrument");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("pk_sections");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_sections_parent_id");

                    b.ToTable("sections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bba816f-2315-43c0-b18e-99a27b1c9668"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Performers"
                        },
                        new
                        {
                            Id = new Guid("4e7a61c5-d2e4-4e3b-b21d-34a90cf958b2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Conductor",
                            ParentId = new Guid("8bba816f-2315-43c0-b18e-99a27b1c9668")
                        },
                        new
                        {
                            Id = new Guid("18f1e750-f50d-4f06-8205-21203981bff6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Assistant Conductor",
                            ParentId = new Guid("4e7a61c5-d2e4-4e3b-b21d-34a90cf958b2")
                        },
                        new
                        {
                            Id = new Guid("6fc908f0-da26-4237-80ca-dfe30453123c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Répétiteur",
                            ParentId = new Guid("4e7a61c5-d2e4-4e3b-b21d-34a90cf958b2")
                        },
                        new
                        {
                            Id = new Guid("94c42496-fdb6-4341-b82f-735fd1706d39"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Vocal Coach",
                            ParentId = new Guid("4e7a61c5-d2e4-4e3b-b21d-34a90cf958b2")
                        },
                        new
                        {
                            Id = new Guid("c2cfb7a0-4981-4dda-b988-8ba74957f6a4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Choir",
                            ParentId = new Guid("8bba816f-2315-43c0-b18e-99a27b1c9668")
                        },
                        new
                        {
                            Id = new Guid("3ed0960c-1eed-4a45-a1ef-343aa8e7b2d6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Female Voices",
                            ParentId = new Guid("c2cfb7a0-4981-4dda-b988-8ba74957f6a4")
                        },
                        new
                        {
                            Id = new Guid("5d469fc5-b3e6-40b8-9fa9-542981083ce3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "High Female Voices",
                            ParentId = new Guid("3ed0960c-1eed-4a45-a1ef-343aa8e7b2d6")
                        },
                        new
                        {
                            Id = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Soprano",
                            ParentId = new Guid("5d469fc5-b3e6-40b8-9fa9-542981083ce3")
                        },
                        new
                        {
                            Id = new Guid("8470ddf0-43ab-477e-b3bc-47ede014b359"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Soprano 1",
                            ParentId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d")
                        },
                        new
                        {
                            Id = new Guid("22d7cf92-7b29-4cf1-a6fa-2954377589b4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Soprano 2",
                            ParentId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d")
                        },
                        new
                        {
                            Id = new Guid("eb42b2f7-413e-4c1a-ab79-23c74b02d054"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Mezzo Soprano",
                            ParentId = new Guid("5d469fc5-b3e6-40b8-9fa9-542981083ce3")
                        },
                        new
                        {
                            Id = new Guid("48337b78-70f0-493e-911b-296632b06ef8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Low Female Voices",
                            ParentId = new Guid("3ed0960c-1eed-4a45-a1ef-343aa8e7b2d6")
                        },
                        new
                        {
                            Id = new Guid("a06431be-f9d6-44dc-8fdb-fbf8aa2bb940"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Alto",
                            ParentId = new Guid("48337b78-70f0-493e-911b-296632b06ef8")
                        },
                        new
                        {
                            Id = new Guid("e809ee90-23f9-44de-b80e-2fddd5ee3683"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Alto 1",
                            ParentId = new Guid("a06431be-f9d6-44dc-8fdb-fbf8aa2bb940")
                        },
                        new
                        {
                            Id = new Guid("50dfa2be-85e2-4638-aa53-22dadc97a844"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Alto 2",
                            ParentId = new Guid("a06431be-f9d6-44dc-8fdb-fbf8aa2bb940")
                        },
                        new
                        {
                            Id = new Guid("4599103d-f220-4744-92d1-7c6993e9bda4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Male Voices",
                            ParentId = new Guid("c2cfb7a0-4981-4dda-b988-8ba74957f6a4")
                        },
                        new
                        {
                            Id = new Guid("7924daef-2542-4648-a42f-4c4374ee09db"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "High Male Voices",
                            ParentId = new Guid("4599103d-f220-4744-92d1-7c6993e9bda4")
                        },
                        new
                        {
                            Id = new Guid("1579d7e7-4f55-4532-a078-69fd1ec939da"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Tenor",
                            ParentId = new Guid("7924daef-2542-4648-a42f-4c4374ee09db")
                        },
                        new
                        {
                            Id = new Guid("3db46ff0-9165-46cc-8f28-6a1d52dee518"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Tenor 1",
                            ParentId = new Guid("1579d7e7-4f55-4532-a078-69fd1ec939da")
                        },
                        new
                        {
                            Id = new Guid("afef89cf-90e1-4d4f-83ab-d2b47e97af0f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Tenor 2",
                            ParentId = new Guid("1579d7e7-4f55-4532-a078-69fd1ec939da")
                        },
                        new
                        {
                            Id = new Guid("b9673cfd-7cdb-472c-86e0-1304cbb3840a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Low Male Voices",
                            ParentId = new Guid("4599103d-f220-4744-92d1-7c6993e9bda4")
                        },
                        new
                        {
                            Id = new Guid("bb647161-8394-47d3-9f43-825762a70fc2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Baritone",
                            ParentId = new Guid("b9673cfd-7cdb-472c-86e0-1304cbb3840a")
                        },
                        new
                        {
                            Id = new Guid("e7dd10ef-1c39-4440-9a6c-65d397f010ca"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Basso",
                            ParentId = new Guid("b9673cfd-7cdb-472c-86e0-1304cbb3840a")
                        },
                        new
                        {
                            Id = new Guid("bfe0e1ca-95ce-4cb6-a9c9-3c23c70bab21"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Basso 1",
                            ParentId = new Guid("e7dd10ef-1c39-4440-9a6c-65d397f010ca")
                        },
                        new
                        {
                            Id = new Guid("61fa66ec-3103-43fe-800c-930547dff82c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Basso 2",
                            ParentId = new Guid("e7dd10ef-1c39-4440-9a6c-65d397f010ca")
                        },
                        new
                        {
                            Id = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Orchestra",
                            ParentId = new Guid("8bba816f-2315-43c0-b18e-99a27b1c9668")
                        },
                        new
                        {
                            Id = new Guid("b289cfe7-d66e-48d8-83a9-f4b1f7710863"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Winds",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Woodwinds",
                            ParentId = new Guid("b289cfe7-d66e-48d8-83a9-f4b1f7710863")
                        },
                        new
                        {
                            Id = new Guid("d6961f83-e792-4ddf-b91a-ae0867caeb3b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)4,
                            IsInstrument = true,
                            Name = "Flute",
                            ParentId = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd")
                        },
                        new
                        {
                            Id = new Guid("ec8aeaf8-f370-4ac8-bd12-ccce0cbcfa0f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Piccolo Flute",
                            ParentId = new Guid("d6961f83-e792-4ddf-b91a-ae0867caeb3b")
                        },
                        new
                        {
                            Id = new Guid("f9c1924b-2b45-459c-b919-99059cb41e73"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Alto Flute",
                            ParentId = new Guid("d6961f83-e792-4ddf-b91a-ae0867caeb3b")
                        },
                        new
                        {
                            Id = new Guid("d0a18a79-ad5a-450d-92cc-20a58496aaf0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Tenor Flute",
                            ParentId = new Guid("d6961f83-e792-4ddf-b91a-ae0867caeb3b")
                        },
                        new
                        {
                            Id = new Guid("fc66c8b8-d9de-4ff0-a695-37e717103686"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Bass Flute",
                            ParentId = new Guid("d6961f83-e792-4ddf-b91a-ae0867caeb3b")
                        },
                        new
                        {
                            Id = new Guid("2327a9c3-2c6f-41b7-9045-bb00af798b42"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)4,
                            IsInstrument = true,
                            Name = "Oboe",
                            ParentId = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd")
                        },
                        new
                        {
                            Id = new Guid("4e71ffc3-e086-4c16-a932-3d80fd302971"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Oboe d'Amore",
                            ParentId = new Guid("2327a9c3-2c6f-41b7-9045-bb00af798b42")
                        },
                        new
                        {
                            Id = new Guid("abe0d27b-2c99-4755-891c-fb0b91f19bb6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "English Horn",
                            ParentId = new Guid("2327a9c3-2c6f-41b7-9045-bb00af798b42")
                        },
                        new
                        {
                            Id = new Guid("2f8d732f-bf82-4a62-86a1-62bffd708189"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Bariton Oboe",
                            ParentId = new Guid("2327a9c3-2c6f-41b7-9045-bb00af798b42")
                        },
                        new
                        {
                            Id = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)4,
                            IsInstrument = true,
                            Name = "Clarinet",
                            ParentId = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd")
                        },
                        new
                        {
                            Id = new Guid("d2551427-d727-42d9-be0e-dea2ae82f2d6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Eb Clarinet",
                            ParentId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512")
                        },
                        new
                        {
                            Id = new Guid("be75913a-9703-4a8d-9e07-7a8d32c459f8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Alto Clarinet",
                            ParentId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512")
                        },
                        new
                        {
                            Id = new Guid("8c0a80d1-5889-4794-89b6-b80a3828aa5b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Basset Horn",
                            ParentId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512")
                        },
                        new
                        {
                            Id = new Guid("5109e464-7b01-40bd-a5e0-398ac3d1bb83"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Bass Clarinet",
                            ParentId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512")
                        },
                        new
                        {
                            Id = new Guid("a5cc5e9d-b318-4edc-af84-ff3d701d0bcb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Double Bass Clarinet",
                            ParentId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512")
                        },
                        new
                        {
                            Id = new Guid("5c14f673-13f2-488f-8c21-7286d3ee10c3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)4,
                            IsInstrument = true,
                            Name = "Bassoon",
                            ParentId = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd")
                        },
                        new
                        {
                            Id = new Guid("8d01524c-7c22-4a20-8f26-711d11addbfd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Contra Bassoon",
                            ParentId = new Guid("5c14f673-13f2-488f-8c21-7286d3ee10c3")
                        },
                        new
                        {
                            Id = new Guid("7cb00d2e-5a98-4b68-b775-3b5d1f267d96"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Contraforte",
                            ParentId = new Guid("5c14f673-13f2-488f-8c21-7286d3ee10c3")
                        },
                        new
                        {
                            Id = new Guid("566260fb-b6be-41dc-956d-4070d30fa88d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Saxophone",
                            ParentId = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd")
                        },
                        new
                        {
                            Id = new Guid("b5d01e60-af61-4d29-bfb3-2f0dbac1e2fb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Soprano Saxophone",
                            ParentId = new Guid("566260fb-b6be-41dc-956d-4070d30fa88d")
                        },
                        new
                        {
                            Id = new Guid("4a31447d-63c2-4e28-ab39-255a956fbe18"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = false,
                            Name = "Alto Saxophone",
                            ParentId = new Guid("566260fb-b6be-41dc-956d-4070d30fa88d")
                        },
                        new
                        {
                            Id = new Guid("da998fcb-92b9-4828-976e-826e97e05cb3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = false,
                            Name = "Tenor Saxophone",
                            ParentId = new Guid("566260fb-b6be-41dc-956d-4070d30fa88d")
                        },
                        new
                        {
                            Id = new Guid("e4622ea3-f6a0-40b2-ac80-a2c9df099aeb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Baritone Saxophone",
                            ParentId = new Guid("566260fb-b6be-41dc-956d-4070d30fa88d")
                        },
                        new
                        {
                            Id = new Guid("fb4f9841-294a-4b6c-bfec-02d3735b1ea0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Bass Saxophone",
                            ParentId = new Guid("566260fb-b6be-41dc-956d-4070d30fa88d")
                        },
                        new
                        {
                            Id = new Guid("f4c70178-d069-44dc-8956-7160c5fef52e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Brass",
                            ParentId = new Guid("b289cfe7-d66e-48d8-83a9-f4b1f7710863")
                        },
                        new
                        {
                            Id = new Guid("7d0d2295-df8a-4cfa-9f43-87dbf9fc133f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "High Brass",
                            ParentId = new Guid("f4c70178-d069-44dc-8956-7160c5fef52e")
                        },
                        new
                        {
                            Id = new Guid("b9532add-efec-4510-831c-902c32ef7dbb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)8,
                            IsInstrument = true,
                            Name = "Horn",
                            ParentId = new Guid("7d0d2295-df8a-4cfa-9f43-87dbf9fc133f")
                        },
                        new
                        {
                            Id = new Guid("c42591db-4e41-413f-8b98-6607e2f12e39"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Wagner Tuba",
                            ParentId = new Guid("b9532add-efec-4510-831c-902c32ef7dbb")
                        },
                        new
                        {
                            Id = new Guid("205b0a0e-1a36-48e9-8b45-df37dc5effa5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)8,
                            IsInstrument = true,
                            Name = "Trumpet",
                            ParentId = new Guid("7d0d2295-df8a-4cfa-9f43-87dbf9fc133f")
                        },
                        new
                        {
                            Id = new Guid("69e64d64-419f-4f9c-9948-a117b02ff198"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = false,
                            Name = "Flugelhorn",
                            ParentId = new Guid("205b0a0e-1a36-48e9-8b45-df37dc5effa5")
                        },
                        new
                        {
                            Id = new Guid("2393549e-5b16-4414-a896-3cebb7bcc9df"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Piccolo Trumpet",
                            ParentId = new Guid("205b0a0e-1a36-48e9-8b45-df37dc5effa5")
                        },
                        new
                        {
                            Id = new Guid("290f84d4-bb3f-41c3-9f42-c649c8eeea26"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Soprano Cornet",
                            ParentId = new Guid("205b0a0e-1a36-48e9-8b45-df37dc5effa5")
                        },
                        new
                        {
                            Id = new Guid("305c06e0-b99f-4f91-ae83-869d8b25c63d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = false,
                            Name = "Cornet",
                            ParentId = new Guid("205b0a0e-1a36-48e9-8b45-df37dc5effa5")
                        },
                        new
                        {
                            Id = new Guid("e4e7239e-0d0d-4a30-93b6-8a61e3ab8041"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Low Brass",
                            ParentId = new Guid("f4c70178-d069-44dc-8956-7160c5fef52e")
                        },
                        new
                        {
                            Id = new Guid("e20ce055-5715-42f4-97e6-4025559b15f7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)4,
                            IsInstrument = true,
                            Name = "Trombone",
                            ParentId = new Guid("e4e7239e-0d0d-4a30-93b6-8a61e3ab8041")
                        },
                        new
                        {
                            Id = new Guid("80f15184-6417-476a-87ac-0f752d011391"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Alto Trombone",
                            ParentId = new Guid("e20ce055-5715-42f4-97e6-4025559b15f7")
                        },
                        new
                        {
                            Id = new Guid("da660c21-0151-4255-a81b-4d25fede199b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Bass Trombone",
                            ParentId = new Guid("e20ce055-5715-42f4-97e6-4025559b15f7")
                        },
                        new
                        {
                            Id = new Guid("32f3fdd9-9517-4db5-856e-376e9fa52b84"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Double Bass Trombone",
                            ParentId = new Guid("e20ce055-5715-42f4-97e6-4025559b15f7")
                        },
                        new
                        {
                            Id = new Guid("554fd3db-110b-4335-bc2a-1d5070f6621a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = true,
                            Name = "Euphonium",
                            ParentId = new Guid("e4e7239e-0d0d-4a30-93b6-8a61e3ab8041")
                        },
                        new
                        {
                            Id = new Guid("803219aa-1a32-4a68-95ae-348bd487135a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = false,
                            Name = "Tenor Horn",
                            ParentId = new Guid("554fd3db-110b-4335-bc2a-1d5070f6621a")
                        },
                        new
                        {
                            Id = new Guid("b525e539-7fa4-49d7-ae93-ec0748022d4d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)3,
                            IsInstrument = false,
                            Name = "Baritone Horn",
                            ParentId = new Guid("554fd3db-110b-4335-bc2a-1d5070f6621a")
                        },
                        new
                        {
                            Id = new Guid("18cbded8-0d64-4e0e-bc19-d6903e0fd5a9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Tuba",
                            ParentId = new Guid("e4e7239e-0d0d-4a30-93b6-8a61e3ab8041")
                        },
                        new
                        {
                            Id = new Guid("2fabd3a1-d398-4108-a74f-2665710133d1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Eb Tuba",
                            ParentId = new Guid("18cbded8-0d64-4e0e-bc19-d6903e0fd5a9")
                        },
                        new
                        {
                            Id = new Guid("31a2b9bf-0c2b-47ec-b8bc-34c9423b74d4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "F Tuba",
                            ParentId = new Guid("18cbded8-0d64-4e0e-bc19-d6903e0fd5a9")
                        },
                        new
                        {
                            Id = new Guid("0558a5ff-ee27-44a1-82ab-d0c0cc018c3c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Percussion",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("ea916a8d-1bce-4e87-b5b0-ff6304bb01a5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Timpani",
                            ParentId = new Guid("0558a5ff-ee27-44a1-82ab-d0c0cc018c3c")
                        },
                        new
                        {
                            Id = new Guid("d12ebc93-4b55-455c-a9db-a826fca9a1f2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Mallets",
                            ParentId = new Guid("0558a5ff-ee27-44a1-82ab-d0c0cc018c3c")
                        },
                        new
                        {
                            Id = new Guid("dcf267e6-5b58-4534-8e4b-a8c5747b1816"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Glockenspiel",
                            ParentId = new Guid("d12ebc93-4b55-455c-a9db-a826fca9a1f2")
                        },
                        new
                        {
                            Id = new Guid("852d8129-a5b7-4378-ad9c-df89dc878b4f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Vibraphone",
                            ParentId = new Guid("d12ebc93-4b55-455c-a9db-a826fca9a1f2")
                        },
                        new
                        {
                            Id = new Guid("2804ed14-7b73-4e17-bd21-edd048a60cb4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Xylophone",
                            ParentId = new Guid("d12ebc93-4b55-455c-a9db-a826fca9a1f2")
                        },
                        new
                        {
                            Id = new Guid("bb0715dc-7f9d-4ddb-b5f5-9e7806e1069f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Marimbaphone",
                            ParentId = new Guid("d12ebc93-4b55-455c-a9db-a826fca9a1f2")
                        },
                        new
                        {
                            Id = new Guid("c15c3649-d7bb-4bbf-bdd3-f6146ebc825c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Drum Set (Orchestra)",
                            ParentId = new Guid("0558a5ff-ee27-44a1-82ab-d0c0cc018c3c")
                        },
                        new
                        {
                            Id = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Others",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("0cf93477-f42f-46c3-8e3d-45ccdc54ad8c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Harp",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("614a8fd0-acfa-4268-b716-3b35a6a17b7a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Keyboards",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("8ed82e0e-0354-4192-8f26-5a2437e9208d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Piano",
                            ParentId = new Guid("614a8fd0-acfa-4268-b716-3b35a6a17b7a")
                        },
                        new
                        {
                            Id = new Guid("bc6cfeb7-569d-4c22-8e80-647aed560bf0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Celesta",
                            ParentId = new Guid("614a8fd0-acfa-4268-b716-3b35a6a17b7a")
                        },
                        new
                        {
                            Id = new Guid("f6af00f5-e81c-4d85-aadd-1e33748e9a64"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Cembalo",
                            ParentId = new Guid("614a8fd0-acfa-4268-b716-3b35a6a17b7a")
                        },
                        new
                        {
                            Id = new Guid("182019da-bde2-44d7-8c77-88cfb0ce428c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Organ",
                            ParentId = new Guid("614a8fd0-acfa-4268-b716-3b35a6a17b7a")
                        },
                        new
                        {
                            Id = new Guid("d22fb8aa-7d38-42c4-9586-30e559f63799"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Synthesizer",
                            ParentId = new Guid("614a8fd0-acfa-4268-b716-3b35a6a17b7a")
                        },
                        new
                        {
                            Id = new Guid("76891771-b5f2-4666-8972-ba7f494fc9de"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Accordion",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("d7ff1f62-e5c5-4662-823b-f77ff7706b4e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Bandoneon",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("a22b6f19-3e9c-4389-824b-22db7b8cf8fd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Guitars",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("1d0ed0b3-b87b-439f-932e-616d7e03a0d6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Acoustic Guitar (Orchestra)",
                            ParentId = new Guid("a22b6f19-3e9c-4389-824b-22db7b8cf8fd")
                        },
                        new
                        {
                            Id = new Guid("ed0829d0-d978-430e-96ec-b93cf75f3fd6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = false,
                            Name = "Electric Guitar (Orchestra)",
                            ParentId = new Guid("a22b6f19-3e9c-4389-824b-22db7b8cf8fd")
                        },
                        new
                        {
                            Id = new Guid("9cd74865-f82a-4be9-afc1-384fb25b7fe4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Electric Bass (Orchestra)",
                            ParentId = new Guid("a22b6f19-3e9c-4389-824b-22db7b8cf8fd")
                        },
                        new
                        {
                            Id = new Guid("08bc313b-d0dd-4b78-bdbf-d976682d965e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "GlassHarp",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("0031e6f5-2d51-4e88-9e82-7bd2c8340cac"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Bagpipes",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("8903b8c5-0ef8-48fd-9c2b-71fbae827965"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Didgeridoo",
                            ParentId = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75")
                        },
                        new
                        {
                            Id = new Guid("1bde9862-3ed5-45cd-8d80-0a52c6b4c0fb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Strings",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("7cef5e36-fe7f-4acb-b17a-24feeac8d5f8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "High Strings",
                            ParentId = new Guid("1bde9862-3ed5-45cd-8d80-0a52c6b4c0fb")
                        },
                        new
                        {
                            Id = new Guid("fab9a49a-9fa4-4af3-9e40-e13bdc930513"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Violins",
                            ParentId = new Guid("7cef5e36-fe7f-4acb-b17a-24feeac8d5f8")
                        },
                        new
                        {
                            Id = new Guid("eb5728b5-b1fd-4a70-8894-7bb152087837"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Violin I",
                            ParentId = new Guid("fab9a49a-9fa4-4af3-9e40-e13bdc930513")
                        },
                        new
                        {
                            Id = new Guid("f3ee3c42-4e4e-411d-a839-6e0420bc35a3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Violin II",
                            ParentId = new Guid("fab9a49a-9fa4-4af3-9e40-e13bdc930513")
                        },
                        new
                        {
                            Id = new Guid("df541ea1-a5fd-4975-b6fd-7cd652a79073"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Viola",
                            ParentId = new Guid("7cef5e36-fe7f-4acb-b17a-24feeac8d5f8")
                        },
                        new
                        {
                            Id = new Guid("fdd5d68c-2620-47a3-80e4-64fda6dc7e3f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Low Strings",
                            ParentId = new Guid("1bde9862-3ed5-45cd-8d80-0a52c6b4c0fb")
                        },
                        new
                        {
                            Id = new Guid("d8686f68-78da-4022-b0b8-97e0c263d694"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Violoncello",
                            ParentId = new Guid("fdd5d68c-2620-47a3-80e4-64fda6dc7e3f")
                        },
                        new
                        {
                            Id = new Guid("e45ec6fa-7595-4084-9e01-991746b7f5e9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Double Bass",
                            ParentId = new Guid("fdd5d68c-2620-47a3-80e4-64fda6dc7e3f")
                        },
                        new
                        {
                            Id = new Guid("1994cb6c-877e-4d7c-aeca-26e68967c2ab"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Band",
                            ParentId = new Guid("8bba816f-2315-43c0-b18e-99a27b1c9668")
                        },
                        new
                        {
                            Id = new Guid("48833c1b-cbc1-43b2-a4c5-f1fa4289f5ab"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)2,
                            IsInstrument = true,
                            Name = "Electric Guitar (Band)",
                            ParentId = new Guid("1994cb6c-877e-4d7c-aeca-26e68967c2ab")
                        },
                        new
                        {
                            Id = new Guid("454c2ad6-e3c8-428a-b74e-c73873159c0e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Electric Bass (Band)",
                            ParentId = new Guid("1994cb6c-877e-4d7c-aeca-26e68967c2ab")
                        },
                        new
                        {
                            Id = new Guid("d787fe9a-2283-43f6-bbc8-8a098e1f1c81"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Drum Set (Band)",
                            ParentId = new Guid("1994cb6c-877e-4d7c-aeca-26e68967c2ab")
                        },
                        new
                        {
                            Id = new Guid("7f811b88-e7db-461a-af5d-e249b1ce9e7d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = true,
                            Name = "Keyboards (Band)",
                            ParentId = new Guid("1994cb6c-877e-4d7c-aeca-26e68967c2ab")
                        },
                        new
                        {
                            Id = new Guid("e0fdb057-c9b7-4477-be75-cbf920a26af6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Soloists",
                            ParentId = new Guid("8bba816f-2315-43c0-b18e-99a27b1c9668")
                        },
                        new
                        {
                            Id = new Guid("067647c0-3f25-449e-9212-03f39fa88f0f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Members"
                        },
                        new
                        {
                            Id = new Guid("b58d047f-ec04-41e9-a728-06a8a160f55b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Visitors"
                        },
                        new
                        {
                            Id = new Guid("75f593aa-fd20-4c05-9300-b31dbb90712e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Volunteers"
                        },
                        new
                        {
                            Id = new Guid("13802d8b-4c73-4a52-8748-20bf3ba0c2b1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Suppliers"
                        },
                        new
                        {
                            Id = new Guid("6a107070-daae-41fc-b27d-416d44d36374"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            InstrumentPartCount = (byte)0,
                            IsInstrument = false,
                            Name = "Contractors"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SectionAppointment", b =>
                {
                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("section_id");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("appointment_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("SectionId", "AppointmentId")
                        .HasName("pk_section_appointments");

                    b.HasIndex("AppointmentId")
                        .HasDatabaseName("ix_section_appointments_appointment_id");

                    b.ToTable("section_appointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_select_values");

                    b.ToTable("select_values");

                    b.HasData(
                        new
                        {
                            Id = new Guid("313445ca-57fa-45f0-8515-325949d60726"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Present"
                        },
                        new
                        {
                            Id = new Guid("f0f26735-b796-4a70-a20c-92e0e2910bb4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Absent"
                        },
                        new
                        {
                            Id = new Guid("86bf6480-787a-4fe0-9d79-0f8d0d36acc4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Inapplicable"
                        },
                        new
                        {
                            Id = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Ambiguous"
                        },
                        new
                        {
                            Id = new Guid("5d31f1f7-73fd-42a4-a429-33fab925b15d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Awaiting Scan"
                        },
                        new
                        {
                            Id = new Guid("75a017d3-dca5-49ec-9bbd-3b01b159ba5b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Yes"
                        },
                        new
                        {
                            Id = new Guid("88b763ac-8093-4c5d-a881-85be1fb8a24d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "No"
                        },
                        new
                        {
                            Id = new Guid("1e60dfdf-e7c9-4378-b1af-dcb53fe20022"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Partly"
                        },
                        new
                        {
                            Id = new Guid("4ee7d317-6d71-4d6e-b45a-954c8c7dcf03"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Don't know yet"
                        },
                        new
                        {
                            Id = new Guid("362efd25-e1d2-496d-b7fa-884371a58682"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Pending"
                        },
                        new
                        {
                            Id = new Guid("34a52363-4a57-4019-abcf-0c9880246891"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Confirmed"
                        },
                        new
                        {
                            Id = new Guid("33bbdccf-59a9-4b05-bdac-af50137cecb3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Cancelled"
                        },
                        new
                        {
                            Id = new Guid("bd0f37e1-ec14-4d87-8380-117b4480d7a4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Postponed"
                        },
                        new
                        {
                            Id = new Guid("425f1526-0513-4535-bdd8-47632d82956f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Archived"
                        },
                        new
                        {
                            Id = new Guid("a4734d39-cbb9-4635-b3ae-f4e1192a6bd1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Mandatory"
                        },
                        new
                        {
                            Id = new Guid("9c0295b7-1b16-4fd6-a7de-ecd724c823b3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Optional"
                        },
                        new
                        {
                            Id = new Guid("87a541e7-706a-47f3-99b3-8b2d6de7a134"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Classical Music"
                        },
                        new
                        {
                            Id = new Guid("5b57a267-f331-41df-995a-93b60fc206ff"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Crossover"
                        },
                        new
                        {
                            Id = new Guid("43d8eafa-ef3f-4034-8c88-9a0b68c33ab1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Chamber Music"
                        },
                        new
                        {
                            Id = new Guid("c76de830-3746-449a-8f1f-bd5d9233655c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Scheduled"
                        },
                        new
                        {
                            Id = new Guid("99d192e1-332a-494e-b821-075be14211be"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Refused"
                        },
                        new
                        {
                            Id = new Guid("5e3edcf4-863b-433b-ae72-b6bb7e4dfc95"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Awaiting Poll"
                        },
                        new
                        {
                            Id = new Guid("ae6dc389-93eb-4d96-bd66-c61dd81155ea"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Meeting"
                        },
                        new
                        {
                            Id = new Guid("61dd102e-d449-40e1-8c6b-4ead99403ac1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Stage Briefing"
                        },
                        new
                        {
                            Id = new Guid("8f64e072-6523-4158-b92e-5c38c8ebca59"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Choreography Rehearsal"
                        },
                        new
                        {
                            Id = new Guid("404f1bfd-2819-47c2-a78b-f3dbd4bc8953"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Photo Session"
                        },
                        new
                        {
                            Id = new Guid("71779748-6d3c-496a-9842-8dc508de6676"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Concert"
                        },
                        new
                        {
                            Id = new Guid("5d50c5c3-e85a-4810-ac46-49572e1ca2f5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Workshop"
                        },
                        new
                        {
                            Id = new Guid("79de43be-57cc-484f-bff2-57f3ba78dbe9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Photo Session"
                        },
                        new
                        {
                            Id = new Guid("130f63c3-9d2f-4301-b062-236c78663e3b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Rehearsal"
                        },
                        new
                        {
                            Id = new Guid("efb2b680-c904-481a-ba7c-9e6a64a998c3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Rehearsal Weekend Choir"
                        },
                        new
                        {
                            Id = new Guid("52d67a48-e99f-4c2f-ac9b-0302d5d3e518"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Show"
                        },
                        new
                        {
                            Id = new Guid("d6848ef8-51c6-44e3-bc29-af1df87afcc1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Watch Show"
                        },
                        new
                        {
                            Id = new Guid("dfe6e73e-9a15-4094-80a5-151a64f3b4db"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "See Comment"
                        },
                        new
                        {
                            Id = new Guid("a0b98a79-7c74-4093-8f5f-79003cad219a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Voice Formation"
                        },
                        new
                        {
                            Id = new Guid("4418bfea-0e79-4f76-9e20-527644f654e0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Sectional Rehearsal"
                        },
                        new
                        {
                            Id = new Guid("3a6218de-6dfc-4aa9-a2a7-f1da20fd61cb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Transfer"
                        },
                        new
                        {
                            Id = new Guid("7c894293-82c2-4320-82f5-f77955feae5a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Assembly"
                        },
                        new
                        {
                            Id = new Guid("a85738d9-e68e-4584-bac8-ccca8d539636"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Audition"
                        },
                        new
                        {
                            Id = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("2567e7be-5a5a-4671-b5ad-765c1e80fd41"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Special Case"
                        },
                        new
                        {
                            Id = new Guid("b60d04e0-9841-41c9-9d24-976c8363a33d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Glöckner 2018"
                        },
                        new
                        {
                            Id = new Guid("ddb23793-af96-4ea6-9b27-5e2dcfc90b65"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Concert Lump Sum 1808"
                        },
                        new
                        {
                            Id = new Guid("d91def3e-4c55-42c7-ac56-147846be6bfa"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Concert Lump Sum 9€/11€ at 10h"
                        },
                        new
                        {
                            Id = new Guid("a10ce98a-b903-4dca-801d-3afb07711877"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Concert Lump Sum 9 €/11€ at 12h"
                        },
                        new
                        {
                            Id = new Guid("717a27d5-2ef3-4266-92a8-84b3600115eb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Rehearsal Hourly Rate 9/11"
                        },
                        new
                        {
                            Id = new Guid("608b5583-a8dc-48d7-8afa-ef87ca0327f0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Private"
                        },
                        new
                        {
                            Id = new Guid("db1d2c88-a7b3-41c3-a17f-4fd7fe9faca5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Work"
                        },
                        new
                        {
                            Id = new Guid("7f6b69f3-4fe8-4b0c-a586-38a661c60af5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Concert tour"
                        },
                        new
                        {
                            Id = new Guid("63a6b9a9-30a8-4cdb-983b-336b587069cb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Rehearsal weekend"
                        },
                        new
                        {
                            Id = new Guid("f2a6ef3d-bb32-4505-83a5-2cb9f611ce0f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Special project"
                        },
                        new
                        {
                            Id = new Guid("52fad37d-23a7-4515-9b77-3ee3bda03b9a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "CD recording"
                        },
                        new
                        {
                            Id = new Guid("95de5380-4027-4b73-b4db-3697aba5ba38"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Contest"
                        },
                        new
                        {
                            Id = new Guid("3f93768e-ac24-4741-9eb8-49d1e8e4a6e1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Amateur"
                        },
                        new
                        {
                            Id = new Guid("e20ff004-aafc-4e28-87f9-0d9c6372951c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Student"
                        },
                        new
                        {
                            Id = new Guid("35d63f30-8704-47d5-865a-ee713a082433"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Semi-Professional"
                        },
                        new
                        {
                            Id = new Guid("f52b9170-c6f6-4828-b96c-df5dfbe9bd73"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Professional"
                        },
                        new
                        {
                            Id = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Unknown"
                        },
                        new
                        {
                            Id = new Guid("3c014654-b4c9-4c7a-a251-ae88ad504c8a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Without"
                        },
                        new
                        {
                            Id = new Guid("dec26aef-f0de-4c9f-a164-e23e2543c987"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "With - strict"
                        },
                        new
                        {
                            Id = new Guid("d53b4a35-f472-42a1-ab22-c7afb1e7d77e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "With - negotiable"
                        },
                        new
                        {
                            Id = new Guid("1f0e9a86-4641-4d7e-8413-a1beba0e8afb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Gladly"
                        },
                        new
                        {
                            Id = new Guid("5850e103-4ac9-472e-85f2-cddc08732ccc"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Emergency only"
                        },
                        new
                        {
                            Id = new Guid("5db547d6-c115-4409-8db7-59374ca2af83"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Never again"
                        },
                        new
                        {
                            Id = new Guid("0d1073cd-f6d5-4572-87ac-98ab6f15c05a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "For contacts only"
                        },
                        new
                        {
                            Id = new Guid("a3be7b91-7548-492e-99dc-2788497f2930"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Film Music"
                        },
                        new
                        {
                            Id = new Guid("982a9947-c6f8-4c9a-b96f-2a4825a11496"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Dance Performance"
                        },
                        new
                        {
                            Id = new Guid("2ecfb104-feb3-406a-b741-0ac9fdd3e8d7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Contemporary Music"
                        },
                        new
                        {
                            Id = new Guid("166edc65-9915-4836-b0a3-3c60ad0bcc04"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Passed"
                        },
                        new
                        {
                            Id = new Guid("33e57595-2166-4cce-aa34-60d7148ae9f7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Failed"
                        },
                        new
                        {
                            Id = new Guid("42f546ab-1b96-4eab-88a4-753cad8392c1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Awaiting"
                        },
                        new
                        {
                            Id = new Guid("45d534e3-6605-42f0-ae57-1a943e18a9cd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Is asking for pianist"
                        },
                        new
                        {
                            Id = new Guid("6bdf5666-65ef-475a-9c48-9a38f18de041"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "No pianist needed"
                        },
                        new
                        {
                            Id = new Guid("0141e712-7080-4e3d-8145-44a3080aa274"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Brings pianist"
                        },
                        new
                        {
                            Id = new Guid("6307ec0e-482a-4777-8b2e-4e8cd5d1f252"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Unnecessary"
                        },
                        new
                        {
                            Id = new Guid("c0911d95-0c6d-4834-840c-43cddf3c51a0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "CV"
                        },
                        new
                        {
                            Id = new Guid("0cf5b2e2-4f01-441a-adc8-a975c7494fd7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Letter of recommendation"
                        },
                        new
                        {
                            Id = new Guid("c1951202-0e6e-41f7-bf07-5cefe47efade"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Diploma"
                        },
                        new
                        {
                            Id = new Guid("e340f76d-074b-40e8-85b0-1bb66a596a06"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Photo"
                        },
                        new
                        {
                            Id = new Guid("d075dda3-ba29-472b-a699-1f92c1af13a9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Video"
                        },
                        new
                        {
                            Id = new Guid("3550443d-5acf-4159-bd59-d7da04dd9434"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Audio"
                        },
                        new
                        {
                            Id = new Guid("6fbab698-993f-4268-a28e-b1f1599771c5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Private ownership"
                        },
                        new
                        {
                            Id = new Guid("e7442e9b-8c54-41ed-8607-accba2d04f61"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Need to borrow"
                        },
                        new
                        {
                            Id = new Guid("28927b59-a999-4f84-abca-4f146888457f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Provision by staff"
                        },
                        new
                        {
                            Id = new Guid("9353f2ee-f074-488b-a359-f2fc6f66da51"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Solo"
                        },
                        new
                        {
                            Id = new Guid("a0e02d9f-03b5-49e0-9ae8-b34a419bc203"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "High"
                        },
                        new
                        {
                            Id = new Guid("959e5b30-6ad1-4102-8dce-f1395b8ae73e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Low"
                        },
                        new
                        {
                            Id = new Guid("a89a8323-4c82-4e55-8ef1-6d7150f564e9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Coach"
                        },
                        new
                        {
                            Id = new Guid("5a4a1318-2f23-45b0-8329-3eec0f446389"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Tutti"
                        },
                        new
                        {
                            Id = new Guid("b85984d6-4390-44f9-bd92-5d1000cb4d3f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "1st section"
                        },
                        new
                        {
                            Id = new Guid("4a9de438-ccce-4a95-873a-c8befb933067"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "2nd section"
                        },
                        new
                        {
                            Id = new Guid("36c6963d-a08c-4394-823a-1d24ba8330b4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Section lead"
                        },
                        new
                        {
                            Id = new Guid("fc2c8cf2-3189-44de-a124-2debe1d7b057"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Concert master"
                        },
                        new
                        {
                            Id = new Guid("9ed94828-9deb-49a9-9a65-ecb83620c82e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "2nd concert master"
                        },
                        new
                        {
                            Id = new Guid("ebae975b-d9a3-4d2f-b0a3-beff554e7041"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra piano"
                        },
                        new
                        {
                            Id = new Guid("61dab188-a07d-4a58-8ec9-c54050e914ac"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Accompaniment"
                        },
                        new
                        {
                            Id = new Guid("1c1bec30-91d2-4699-8753-67f4feb53df3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Interested"
                        },
                        new
                        {
                            Id = new Guid("26686d6e-853e-4d57-b10d-35444ae824be"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Acceptance"
                        },
                        new
                        {
                            Id = new Guid("78d6ce19-ac32-444f-94a6-aa4262340fa1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Refusal"
                        },
                        new
                        {
                            Id = new Guid("a80c8892-7cba-4b19-b84d-937da70c8af3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Unclear"
                        },
                        new
                        {
                            Id = new Guid("b3bd7011-2cda-49d9-8fea-46fa02db9c4b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Candidate"
                        },
                        new
                        {
                            Id = new Guid("d2236889-d7d1-4896-b449-69f273c6b514"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Invited"
                        },
                        new
                        {
                            Id = new Guid("77c68dbb-a627-4053-829e-86c555754f60"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Not invited"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Property")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("property");

                    b.Property<string>("Table")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("table");

                    b.HasKey("Id")
                        .HasName("pk_select_value_categories");

                    b.HasIndex("Property")
                        .HasDatabaseName("ix_select_value_categories_property");

                    b.HasIndex("Table")
                        .HasDatabaseName("ix_select_value_categories_table");

                    b.ToTable("select_value_categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Address Type",
                            Property = "Type",
                            Table = "PersonAddress"
                        },
                        new
                        {
                            Id = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Category",
                            Property = "Category",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Salary",
                            Property = "Salary",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Salary Pattern",
                            Property = "SalaryPattern",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Expectation KBB",
                            Property = "Expectation",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Prediction Participant",
                            Property = "Prediction",
                            Table = "AppointmentParticipation"
                        },
                        new
                        {
                            Id = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Result",
                            Property = "Result",
                            Table = "AppointmentParticipation"
                        },
                        new
                        {
                            Id = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Status",
                            Property = "Status",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Genre",
                            Property = "Genre",
                            Table = "Project"
                        },
                        new
                        {
                            Id = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Type",
                            Property = "Type",
                            Table = "Project"
                        },
                        new
                        {
                            Id = new Guid("9804d695-d8c7-40bd-814f-8458b55fb583"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "State",
                            Property = "State",
                            Table = "Project"
                        },
                        new
                        {
                            Id = new Guid("9648daa0-c2b2-4b97-912b-7ce30b9534a8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Qualification",
                            Property = "Qualification",
                            Table = "MusicianProfile"
                        },
                        new
                        {
                            Id = new Guid("9c6b7ba0-f672-433f-b1e3-a80a2eb0a3ea"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Salary",
                            Property = "Salary",
                            Table = "MusicianProfile"
                        },
                        new
                        {
                            Id = new Guid("d1ca913c-dee7-46d8-9fd4-ea564af8005f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Inquiry status performer",
                            Property = "InquiryStatusPerformer",
                            Table = "MusicianProfile"
                        },
                        new
                        {
                            Id = new Guid("395ead29-7ecc-4999-b479-dffe97437e3a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Inquiry status staff",
                            Property = "InquiryStatusStaff",
                            Table = "MusicianProfile"
                        },
                        new
                        {
                            Id = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Available document status",
                            Property = "AvailableDocuments",
                            Table = "MusicianProfile"
                        },
                        new
                        {
                            Id = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Status",
                            Property = "Status",
                            Table = "Audition"
                        },
                        new
                        {
                            Id = new Guid("747ef1be-2445-4c3f-8e6c-856ea4aac6b7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Repetitor status",
                            Property = "RepetitorStatus",
                            Table = "Audition"
                        },
                        new
                        {
                            Id = new Guid("e3756ad6-de58-4c22-9a7c-363bc33c613c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Instrument Availability",
                            Property = "InstrumentAvailability",
                            Table = "MusicianProfileSection"
                        },
                        new
                        {
                            Id = new Guid("474775e9-f08a-4043-8474-e84f42bf3948"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Participation invitation status",
                            Property = "InvitationStatus",
                            Table = "ProjectParticipation"
                        },
                        new
                        {
                            Id = new Guid("1bae5715-8363-4221-8735-8def3d2546e1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Participation status inner",
                            Property = "ParticipationStatusInner",
                            Table = "ProjectParticipation"
                        },
                        new
                        {
                            Id = new Guid("13376e1d-2378-4e30-a6d2-808da4a4ba4d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Participation status internal",
                            Property = "ParticipationStatusInternal",
                            Table = "ProjectParticipation"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("SelectValueCategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_category_id");

                    b.Property<Guid>("SelectValueId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_id");

                    b.HasKey("Id")
                        .HasName("pk_select_value_mappings");

                    b.HasIndex("SelectValueCategoryId")
                        .HasDatabaseName("ix_select_value_mappings_select_value_category_id");

                    b.HasIndex("SelectValueId")
                        .HasDatabaseName("ix_select_value_mappings_select_value_id");

                    b.ToTable("select_value_mappings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb44b625-7086-48e6-bcc6-a004dd472012"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            SelectValueId = new Guid("608b5583-a8dc-48d7-8afa-ef87ca0327f0")
                        },
                        new
                        {
                            Id = new Guid("63437ce4-b63b-4558-9f91-1474b896bf1c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            SelectValueId = new Guid("db1d2c88-a7b3-41c3-a17f-4fd7fe9faca5")
                        },
                        new
                        {
                            Id = new Guid("f81c698e-0017-41c0-8ff9-78dbaa3d2676"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            SelectValueId = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0")
                        },
                        new
                        {
                            Id = new Guid("c1b6d08b-f31e-4f38-a8c0-761e42fbd2b7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("ae6dc389-93eb-4d96-bd66-c61dd81155ea")
                        },
                        new
                        {
                            Id = new Guid("dd4556b3-d8b3-4002-8bde-68e327945916"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("61dd102e-d449-40e1-8c6b-4ead99403ac1")
                        },
                        new
                        {
                            Id = new Guid("ac1ccdd4-39aa-4767-95ea-099a829f275b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("8f64e072-6523-4158-b92e-5c38c8ebca59")
                        },
                        new
                        {
                            Id = new Guid("d8c99a34-025d-455b-b317-92453da36631"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("52d67a48-e99f-4c2f-ac9b-0302d5d3e518")
                        },
                        new
                        {
                            Id = new Guid("e9c79ae9-5498-459d-8852-9f135da7afae"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("404f1bfd-2819-47c2-a78b-f3dbd4bc8953")
                        },
                        new
                        {
                            Id = new Guid("0c8af1d2-ae39-464d-9e03-a1487cfd7321"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("71779748-6d3c-496a-9842-8dc508de6676")
                        },
                        new
                        {
                            Id = new Guid("cfc62012-4d74-4cf6-a06e-7fc3dbacbff8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("5d50c5c3-e85a-4810-ac46-49572e1ca2f5")
                        },
                        new
                        {
                            Id = new Guid("466aa422-0ef2-4e7f-a6a8-d188d80491f6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("79de43be-57cc-484f-bff2-57f3ba78dbe9")
                        },
                        new
                        {
                            Id = new Guid("86672779-5e70-4965-b59c-032086d00914"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("130f63c3-9d2f-4301-b062-236c78663e3b")
                        },
                        new
                        {
                            Id = new Guid("5b89cf6e-0194-4e01-bb32-8b1813a51e16"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("efb2b680-c904-481a-ba7c-9e6a64a998c3")
                        },
                        new
                        {
                            Id = new Guid("642cc60f-e582-47ed-a40f-ea490dd3d950"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("d6848ef8-51c6-44e3-bc29-af1df87afcc1")
                        },
                        new
                        {
                            Id = new Guid("a39a92fe-bea2-40fa-817b-e7272bfc9d4b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("dfe6e73e-9a15-4094-80a5-151a64f3b4db")
                        },
                        new
                        {
                            Id = new Guid("b62cc155-f1a9-4904-8e6a-95e85339da83"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("a0b98a79-7c74-4093-8f5f-79003cad219a")
                        },
                        new
                        {
                            Id = new Guid("2634c0cc-31d2-4f61-813d-7ec60fc8ab34"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("4418bfea-0e79-4f76-9e20-527644f654e0")
                        },
                        new
                        {
                            Id = new Guid("4e9d4a1b-cae7-4002-93a1-cef3f209146b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("3a6218de-6dfc-4aa9-a2a7-f1da20fd61cb")
                        },
                        new
                        {
                            Id = new Guid("547b561e-cea7-4296-9b1d-4dd41e0d5179"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("7c894293-82c2-4320-82f5-f77955feae5a")
                        },
                        new
                        {
                            Id = new Guid("9cf090a3-680d-4770-b929-0a0d080576a0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("a85738d9-e68e-4584-bac8-ccca8d539636")
                        },
                        new
                        {
                            Id = new Guid("609f9ece-42ce-4cc9-a89b-1fec1ddbc5fe"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0")
                        },
                        new
                        {
                            Id = new Guid("88da1c17-9efc-4f69-ba0f-39c76592845b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("75a017d3-dca5-49ec-9bbd-3b01b159ba5b")
                        },
                        new
                        {
                            Id = new Guid("aedc27f3-e2e8-4368-ad69-1ab1c3dd7974"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("88b763ac-8093-4c5d-a881-85be1fb8a24d")
                        },
                        new
                        {
                            Id = new Guid("5b936e5f-3743-4cc3-91af-0cc8742c846e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2")
                        },
                        new
                        {
                            Id = new Guid("bbe90120-55f3-4474-a059-1334d0adaa57"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("2567e7be-5a5a-4671-b5ad-765c1e80fd41")
                        },
                        new
                        {
                            Id = new Guid("8b51c75f-d597-48ef-8451-5f5fc32d57d1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("b60d04e0-9841-41c9-9d24-976c8363a33d")
                        },
                        new
                        {
                            Id = new Guid("104fc525-bb0b-49dc-b2b2-9a8f63e45c92"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("d91def3e-4c55-42c7-ac56-147846be6bfa")
                        },
                        new
                        {
                            Id = new Guid("f15b88b2-395d-4195-af25-8b8879640baf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("a10ce98a-b903-4dca-801d-3afb07711877")
                        },
                        new
                        {
                            Id = new Guid("74278b65-fd54-49d2-9cd2-061dd6318c7d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("ddb23793-af96-4ea6-9b27-5e2dcfc90b65")
                        },
                        new
                        {
                            Id = new Guid("836c69d6-46f1-40d4-b75d-6aa86f9ec066"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("717a27d5-2ef3-4266-92a8-84b3600115eb")
                        },
                        new
                        {
                            Id = new Guid("867622fa-7aa5-43f3-b3ef-5290d1f61734"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("362efd25-e1d2-496d-b7fa-884371a58682")
                        },
                        new
                        {
                            Id = new Guid("647f674a-bc2f-4d3a-9ce4-f0aefa98cd9d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("34a52363-4a57-4019-abcf-0c9880246891")
                        },
                        new
                        {
                            Id = new Guid("b09bc4a6-06ab-4d45-8b82-7971e662ccb5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("a4734d39-cbb9-4635-b3ae-f4e1192a6bd1")
                        },
                        new
                        {
                            Id = new Guid("d64abb04-dc1c-4e17-bed5-a62196a59c49"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("9c0295b7-1b16-4fd6-a7de-ecd724c823b3")
                        },
                        new
                        {
                            Id = new Guid("319d508e-a6e2-437e-b48b-6be51e3459bd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("75a017d3-dca5-49ec-9bbd-3b01b159ba5b")
                        },
                        new
                        {
                            Id = new Guid("c9225a82-0348-41bb-a591-7726f8079cde"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("1e60dfdf-e7c9-4378-b1af-dcb53fe20022")
                        },
                        new
                        {
                            Id = new Guid("17d201fc-777b-43bb-9c46-0d07737a8ab7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("88b763ac-8093-4c5d-a881-85be1fb8a24d")
                        },
                        new
                        {
                            Id = new Guid("50e6049b-a9cd-400b-a475-e2563147aebc"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("4ee7d317-6d71-4d6e-b45a-954c8c7dcf03")
                        },
                        new
                        {
                            Id = new Guid("3801aa69-cc4e-4fd5-947c-bfdd4e95d48e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("313445ca-57fa-45f0-8515-325949d60726")
                        },
                        new
                        {
                            Id = new Guid("ade78d45-b010-4ed7-87f0-e30e0558f151"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("f0f26735-b796-4a70-a20c-92e0e2910bb4")
                        },
                        new
                        {
                            Id = new Guid("ff994b2c-a3bd-4676-a974-f53d4fa562ba"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("86bf6480-787a-4fe0-9d79-0f8d0d36acc4")
                        },
                        new
                        {
                            Id = new Guid("8b7d7f26-b7e5-42e2-afc1-cedddbae841a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2")
                        },
                        new
                        {
                            Id = new Guid("7fb30d45-1faf-4f6a-ac5d-436204ad8e69"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("5d31f1f7-73fd-42a4-a429-33fab925b15d")
                        },
                        new
                        {
                            Id = new Guid("36176b7e-0926-43d6-b19a-72838ccd2acd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("34a52363-4a57-4019-abcf-0c9880246891")
                        },
                        new
                        {
                            Id = new Guid("93033f7e-a3c1-45e3-8a17-021d0a4abe5a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("c76de830-3746-449a-8f1f-bd5d9233655c")
                        },
                        new
                        {
                            Id = new Guid("0126fded-0a82-4b53-85e4-1c04a4f79296"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("99d192e1-332a-494e-b821-075be14211be")
                        },
                        new
                        {
                            Id = new Guid("b6cf76a5-ec3f-4e81-9499-174d33bb7249"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2")
                        },
                        new
                        {
                            Id = new Guid("4dc9db05-357a-43a6-ba20-f2a9e5033802"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("5e3edcf4-863b-433b-ae72-b6bb7e4dfc95")
                        },
                        new
                        {
                            Id = new Guid("d733e38d-1d80-4054-b654-4ea4a128b0a8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("87a541e7-706a-47f3-99b3-8b2d6de7a134")
                        },
                        new
                        {
                            Id = new Guid("e7e78e76-3850-4eb5-892f-d90be6c256a4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("5b57a267-f331-41df-995a-93b60fc206ff")
                        },
                        new
                        {
                            Id = new Guid("29e1142f-aa9e-4b94-ae21-9a63f7b65c15"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("43d8eafa-ef3f-4034-8c88-9a0b68c33ab1")
                        },
                        new
                        {
                            Id = new Guid("5578f637-14b7-4c11-85a8-0b94d83da678"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("a3be7b91-7548-492e-99dc-2788497f2930")
                        },
                        new
                        {
                            Id = new Guid("8daa5ae4-3885-4739-803a-693c7cfdf314"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("982a9947-c6f8-4c9a-b96f-2a4825a11496")
                        },
                        new
                        {
                            Id = new Guid("4ef47024-d8a5-4b2d-8584-aeb29263dddb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("2ecfb104-feb3-406a-b741-0ac9fdd3e8d7")
                        },
                        new
                        {
                            Id = new Guid("34f05f05-ef23-4f36-94e7-73b917530c51"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("71779748-6d3c-496a-9842-8dc508de6676")
                        },
                        new
                        {
                            Id = new Guid("7f76d426-cab7-4f4f-aba3-bd430bcec003"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("7f6b69f3-4fe8-4b0c-a586-38a661c60af5")
                        },
                        new
                        {
                            Id = new Guid("ae2f10ff-39ae-427e-a5e8-ddcd89422d44"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("5d50c5c3-e85a-4810-ac46-49572e1ca2f5")
                        },
                        new
                        {
                            Id = new Guid("44710a6b-93c0-4aac-b552-e0423f1b106a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("79de43be-57cc-484f-bff2-57f3ba78dbe9")
                        },
                        new
                        {
                            Id = new Guid("3f166c3c-c85e-404b-aad3-c8996f4fb75f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("130f63c3-9d2f-4301-b062-236c78663e3b")
                        },
                        new
                        {
                            Id = new Guid("d8f337d0-84fc-4a4d-b75c-fbe2208808ea"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("63a6b9a9-30a8-4cdb-983b-336b587069cb")
                        },
                        new
                        {
                            Id = new Guid("574e0c4b-cbb3-4750-926b-3df4c377fc5e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("f2a6ef3d-bb32-4505-83a5-2cb9f611ce0f")
                        },
                        new
                        {
                            Id = new Guid("679116ec-7840-4c6d-bb45-fa2d89d6e779"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("52fad37d-23a7-4515-9b77-3ee3bda03b9a")
                        },
                        new
                        {
                            Id = new Guid("5c3f5e18-7afd-4404-98db-658e852901dc"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("53ed1791-36d7-4534-867c-15175e6f4584"),
                            SelectValueId = new Guid("95de5380-4027-4b73-b4db-3697aba5ba38")
                        },
                        new
                        {
                            Id = new Guid("725a4f4a-37cb-46ba-93a3-7b9cc2b015cb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9804d695-d8c7-40bd-814f-8458b55fb583"),
                            SelectValueId = new Guid("362efd25-e1d2-496d-b7fa-884371a58682")
                        },
                        new
                        {
                            Id = new Guid("b793fa86-2025-4258-8993-8045f4c312d7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9804d695-d8c7-40bd-814f-8458b55fb583"),
                            SelectValueId = new Guid("34a52363-4a57-4019-abcf-0c9880246891")
                        },
                        new
                        {
                            Id = new Guid("65975857-ab27-480d-87c3-dba74d45cb63"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9804d695-d8c7-40bd-814f-8458b55fb583"),
                            SelectValueId = new Guid("33bbdccf-59a9-4b05-bdac-af50137cecb3")
                        },
                        new
                        {
                            Id = new Guid("bc29bf0a-2ebb-4db8-8765-a5f835492552"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9804d695-d8c7-40bd-814f-8458b55fb583"),
                            SelectValueId = new Guid("bd0f37e1-ec14-4d87-8380-117b4480d7a4")
                        },
                        new
                        {
                            Id = new Guid("75f2d1c3-4ba2-4acc-8fd3-6b01ca66d1c9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9804d695-d8c7-40bd-814f-8458b55fb583"),
                            SelectValueId = new Guid("425f1526-0513-4535-bdd8-47632d82956f")
                        },
                        new
                        {
                            Id = new Guid("f036bca9-95d4-4526-b845-fff9208ab103"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9648daa0-c2b2-4b97-912b-7ce30b9534a8"),
                            SelectValueId = new Guid("3f93768e-ac24-4741-9eb8-49d1e8e4a6e1")
                        },
                        new
                        {
                            Id = new Guid("6304b935-633d-4bba-a90f-9bd864c867c6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9648daa0-c2b2-4b97-912b-7ce30b9534a8"),
                            SelectValueId = new Guid("e20ff004-aafc-4e28-87f9-0d9c6372951c")
                        },
                        new
                        {
                            Id = new Guid("20f9698c-2f3d-41fd-9f33-1feeababfb1c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9648daa0-c2b2-4b97-912b-7ce30b9534a8"),
                            SelectValueId = new Guid("35d63f30-8704-47d5-865a-ee713a082433")
                        },
                        new
                        {
                            Id = new Guid("30f592f6-485a-468a-bfb2-4854be733e74"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9648daa0-c2b2-4b97-912b-7ce30b9534a8"),
                            SelectValueId = new Guid("f52b9170-c6f6-4828-b96c-df5dfbe9bd73")
                        },
                        new
                        {
                            Id = new Guid("42d76464-4b4b-4884-b8e3-1f69baaced4c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9648daa0-c2b2-4b97-912b-7ce30b9534a8"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("58a0d16f-2dac-4836-930e-1dd320430ef4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9c6b7ba0-f672-433f-b1e3-a80a2eb0a3ea"),
                            SelectValueId = new Guid("3c014654-b4c9-4c7a-a251-ae88ad504c8a")
                        },
                        new
                        {
                            Id = new Guid("459dc1ea-de92-4a26-9b7b-848d67154cae"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9c6b7ba0-f672-433f-b1e3-a80a2eb0a3ea"),
                            SelectValueId = new Guid("dec26aef-f0de-4c9f-a164-e23e2543c987")
                        },
                        new
                        {
                            Id = new Guid("2fbb99cd-d14a-4b7c-b7fb-9b676f961e2c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9c6b7ba0-f672-433f-b1e3-a80a2eb0a3ea"),
                            SelectValueId = new Guid("d53b4a35-f472-42a1-ab22-c7afb1e7d77e")
                        },
                        new
                        {
                            Id = new Guid("d80bf2be-de2f-4d72-ba02-6081b5ba77d2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("9c6b7ba0-f672-433f-b1e3-a80a2eb0a3ea"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("68e947c0-9450-4b64-90d7-553850396a3f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d1ca913c-dee7-46d8-9fd4-ea564af8005f"),
                            SelectValueId = new Guid("1f0e9a86-4641-4d7e-8413-a1beba0e8afb")
                        },
                        new
                        {
                            Id = new Guid("60c1a391-59b4-4cea-ba83-59e09f7512b6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d1ca913c-dee7-46d8-9fd4-ea564af8005f"),
                            SelectValueId = new Guid("5850e103-4ac9-472e-85f2-cddc08732ccc")
                        },
                        new
                        {
                            Id = new Guid("ab5c5904-2683-47c4-a436-319303b8e62f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d1ca913c-dee7-46d8-9fd4-ea564af8005f"),
                            SelectValueId = new Guid("5db547d6-c115-4409-8db7-59374ca2af83")
                        },
                        new
                        {
                            Id = new Guid("a15014ad-582e-4388-9b58-aceb52cf41bf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d1ca913c-dee7-46d8-9fd4-ea564af8005f"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("90b5cfa9-890b-4b89-a750-646f3a26db23"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d1ca913c-dee7-46d8-9fd4-ea564af8005f"),
                            SelectValueId = new Guid("0d1073cd-f6d5-4572-87ac-98ab6f15c05a")
                        },
                        new
                        {
                            Id = new Guid("cdfb1c47-22dc-4657-aab8-1dbfaf21e862"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("395ead29-7ecc-4999-b479-dffe97437e3a"),
                            SelectValueId = new Guid("1f0e9a86-4641-4d7e-8413-a1beba0e8afb")
                        },
                        new
                        {
                            Id = new Guid("9363bb46-937e-42bf-bb71-5fb16126b501"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("395ead29-7ecc-4999-b479-dffe97437e3a"),
                            SelectValueId = new Guid("5850e103-4ac9-472e-85f2-cddc08732ccc")
                        },
                        new
                        {
                            Id = new Guid("03a0cbc1-4546-4b54-b05d-ec37dafeec25"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("395ead29-7ecc-4999-b479-dffe97437e3a"),
                            SelectValueId = new Guid("5db547d6-c115-4409-8db7-59374ca2af83")
                        },
                        new
                        {
                            Id = new Guid("0fdbc388-feba-4607-9771-7751009f1fc8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("395ead29-7ecc-4999-b479-dffe97437e3a"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("354ef017-70ca-4c2b-914c-71be7289a0e5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("395ead29-7ecc-4999-b479-dffe97437e3a"),
                            SelectValueId = new Guid("0d1073cd-f6d5-4572-87ac-98ab6f15c05a")
                        },
                        new
                        {
                            Id = new Guid("be152c92-b807-4850-8327-9d1916dabead"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            SelectValueId = new Guid("166edc65-9915-4836-b0a3-3c60ad0bcc04")
                        },
                        new
                        {
                            Id = new Guid("7b8defe6-9922-43d6-8df0-3a73f47d6980"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            SelectValueId = new Guid("33e57595-2166-4cce-aa34-60d7148ae9f7")
                        },
                        new
                        {
                            Id = new Guid("0e997440-53f2-4823-8581-4d4716525885"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            SelectValueId = new Guid("42f546ab-1b96-4eab-88a4-753cad8392c1")
                        },
                        new
                        {
                            Id = new Guid("fab42540-8c9d-4b18-9341-660f60dd7644"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            SelectValueId = new Guid("33bbdccf-59a9-4b05-bdac-af50137cecb3")
                        },
                        new
                        {
                            Id = new Guid("3acd5be1-5fbc-4de4-a45c-2e230c413c85"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            SelectValueId = new Guid("6307ec0e-482a-4777-8b2e-4e8cd5d1f252")
                        },
                        new
                        {
                            Id = new Guid("24c5bbe1-37eb-4368-ac7c-a6061058bbef"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("072c2a9a-a492-4190-9a49-505ff7056528"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("a88b874f-9879-482f-85ec-1ddda9bb545c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("747ef1be-2445-4c3f-8e6c-856ea4aac6b7"),
                            SelectValueId = new Guid("45d534e3-6605-42f0-ae57-1a943e18a9cd")
                        },
                        new
                        {
                            Id = new Guid("9808c1f6-0bbd-4054-acca-779d56a8a934"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("747ef1be-2445-4c3f-8e6c-856ea4aac6b7"),
                            SelectValueId = new Guid("0141e712-7080-4e3d-8145-44a3080aa274")
                        },
                        new
                        {
                            Id = new Guid("0d1b888f-0f45-4f02-806b-480d5594bd27"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("747ef1be-2445-4c3f-8e6c-856ea4aac6b7"),
                            SelectValueId = new Guid("6bdf5666-65ef-475a-9c48-9a38f18de041")
                        },
                        new
                        {
                            Id = new Guid("98addc5f-f2fa-4640-8441-d4220b7daea2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("747ef1be-2445-4c3f-8e6c-856ea4aac6b7"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("f9cc5445-8a6e-480b-bffb-410089f55896"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("c0911d95-0c6d-4834-840c-43cddf3c51a0")
                        },
                        new
                        {
                            Id = new Guid("a3e5843b-05c3-452c-a29d-da8de738181a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("0cf5b2e2-4f01-441a-adc8-a975c7494fd7")
                        },
                        new
                        {
                            Id = new Guid("1b53d96a-f9a1-4037-b103-f7aae9b278d7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("c1951202-0e6e-41f7-bf07-5cefe47efade")
                        },
                        new
                        {
                            Id = new Guid("edfad6f1-6584-4798-a09a-9f6146127d82"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("3550443d-5acf-4159-bd59-d7da04dd9434")
                        },
                        new
                        {
                            Id = new Guid("f1626a63-6bf1-442a-86ad-8a86242bde94"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("d075dda3-ba29-472b-a699-1f92c1af13a9")
                        },
                        new
                        {
                            Id = new Guid("887e7e2e-0c90-4c4c-9504-3f2a5af7fbcb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("e340f76d-074b-40e8-85b0-1bb66a596a06")
                        },
                        new
                        {
                            Id = new Guid("4298e1f5-ea1d-4a83-9b32-e5dc3a7cbca9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("c4ff62bb-9f40-4499-b237-d7b87b2b36f7"),
                            SelectValueId = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0")
                        },
                        new
                        {
                            Id = new Guid("d33ea034-0c5f-458d-bef5-26d2c12b6b03"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e3756ad6-de58-4c22-9a7c-363bc33c613c"),
                            SelectValueId = new Guid("6fbab698-993f-4268-a28e-b1f1599771c5")
                        },
                        new
                        {
                            Id = new Guid("c6b28eb5-e9d6-4250-bc79-6fa9bfbdbc5a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e3756ad6-de58-4c22-9a7c-363bc33c613c"),
                            SelectValueId = new Guid("e7442e9b-8c54-41ed-8607-accba2d04f61")
                        },
                        new
                        {
                            Id = new Guid("7869a9b0-fb13-4c00-ac7c-2fa1b27a00af"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e3756ad6-de58-4c22-9a7c-363bc33c613c"),
                            SelectValueId = new Guid("28927b59-a999-4f84-abca-4f146888457f")
                        },
                        new
                        {
                            Id = new Guid("0298c0d1-57e2-415a-9d6c-3f47e9ab6f22"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e3756ad6-de58-4c22-9a7c-363bc33c613c"),
                            SelectValueId = new Guid("b67d1ac5-80ec-4b7d-bcb8-72e3da55f201")
                        },
                        new
                        {
                            Id = new Guid("625a9195-2380-4762-8dc6-13163e354ef6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("474775e9-f08a-4043-8474-e84f42bf3948"),
                            SelectValueId = new Guid("d2236889-d7d1-4896-b449-69f273c6b514")
                        },
                        new
                        {
                            Id = new Guid("2ad77626-e0b3-45a6-9d24-e4677181ee7e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("474775e9-f08a-4043-8474-e84f42bf3948"),
                            SelectValueId = new Guid("77c68dbb-a627-4053-829e-86c555754f60")
                        },
                        new
                        {
                            Id = new Guid("2a5f85e6-a7ed-48eb-852c-0b191d7ba949"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("474775e9-f08a-4043-8474-e84f42bf3948"),
                            SelectValueId = new Guid("b3bd7011-2cda-49d9-8fea-46fa02db9c4b")
                        },
                        new
                        {
                            Id = new Guid("c6b0b06f-a915-4087-9827-34e76ab6895f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("474775e9-f08a-4043-8474-e84f42bf3948"),
                            SelectValueId = new Guid("a80c8892-7cba-4b19-b84d-937da70c8af3")
                        },
                        new
                        {
                            Id = new Guid("e0abe26f-27da-4396-b80c-d1ceb836a8b2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1bae5715-8363-4221-8735-8def3d2546e1"),
                            SelectValueId = new Guid("1c1bec30-91d2-4699-8753-67f4feb53df3")
                        },
                        new
                        {
                            Id = new Guid("eef4a4d1-796b-4b37-96f6-f31dbccf0aeb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1bae5715-8363-4221-8735-8def3d2546e1"),
                            SelectValueId = new Guid("26686d6e-853e-4d57-b10d-35444ae824be")
                        },
                        new
                        {
                            Id = new Guid("1d402f12-816d-4994-a94d-28d52cb2d199"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1bae5715-8363-4221-8735-8def3d2546e1"),
                            SelectValueId = new Guid("78d6ce19-ac32-444f-94a6-aa4262340fa1")
                        },
                        new
                        {
                            Id = new Guid("8168cfbf-7e53-41c5-8bc4-f5392d9a3b57"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1bae5715-8363-4221-8735-8def3d2546e1"),
                            SelectValueId = new Guid("362efd25-e1d2-496d-b7fa-884371a58682")
                        },
                        new
                        {
                            Id = new Guid("b0dcb5e9-bbc6-4004-b9d7-0f6723416b9b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("13376e1d-2378-4e30-a6d2-808da4a4ba4d"),
                            SelectValueId = new Guid("b3bd7011-2cda-49d9-8fea-46fa02db9c4b")
                        },
                        new
                        {
                            Id = new Guid("f1c2c792-f11f-43ab-8cf6-d6ff905894fc"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("13376e1d-2378-4e30-a6d2-808da4a4ba4d"),
                            SelectValueId = new Guid("26686d6e-853e-4d57-b10d-35444ae824be")
                        },
                        new
                        {
                            Id = new Guid("0096f414-50c9-4d45-9a85-4af30641b7fa"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("13376e1d-2378-4e30-a6d2-808da4a4ba4d"),
                            SelectValueId = new Guid("78d6ce19-ac32-444f-94a6-aa4262340fa1")
                        },
                        new
                        {
                            Id = new Guid("03bdcf0a-2638-4b8f-a093-4084b9969162"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("13376e1d-2378-4e30-a6d2-808da4a4ba4d"),
                            SelectValueId = new Guid("362efd25-e1d2-496d-b7fa-884371a58682")
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("section_id");

                    b.Property<Guid>("SelectValueId")
                        .HasColumnType("uuid")
                        .HasColumnName("select_value_id");

                    b.HasKey("Id")
                        .HasName("pk_select_value_sections");

                    b.HasIndex("SectionId")
                        .HasDatabaseName("ix_select_value_sections_section_id");

                    b.HasIndex("SelectValueId")
                        .HasDatabaseName("ix_select_value_sections_select_value_id");

                    b.ToTable("select_value_sections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4abea964-f83c-4973-a376-6e7782da6e7e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("b9532add-efec-4510-831c-902c32ef7dbb"),
                            SelectValueId = new Guid("9353f2ee-f074-488b-a359-f2fc6f66da51")
                        },
                        new
                        {
                            Id = new Guid("42525d3a-e158-44ee-88b5-1a4332a77862"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("b9532add-efec-4510-831c-902c32ef7dbb"),
                            SelectValueId = new Guid("959e5b30-6ad1-4102-8dce-f1395b8ae73e")
                        },
                        new
                        {
                            Id = new Guid("b43fc897-ebcf-4d2a-8682-33b6337b5ab2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("b9532add-efec-4510-831c-902c32ef7dbb"),
                            SelectValueId = new Guid("a0e02d9f-03b5-49e0-9ae8-b34a419bc203")
                        },
                        new
                        {
                            Id = new Guid("2e43c349-0a3b-4860-94fc-34e87a306845"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("b9532add-efec-4510-831c-902c32ef7dbb"),
                            SelectValueId = new Guid("a89a8323-4c82-4e55-8ef1-6d7150f564e9")
                        },
                        new
                        {
                            Id = new Guid("c7b2bf38-3fb0-46a1-93c1-a41f3d865d96"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512"),
                            SelectValueId = new Guid("9353f2ee-f074-488b-a359-f2fc6f66da51")
                        },
                        new
                        {
                            Id = new Guid("1524b2d5-609c-41b2-bbd3-bba7cfa521f9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512"),
                            SelectValueId = new Guid("5a4a1318-2f23-45b0-8329-3eec0f446389")
                        },
                        new
                        {
                            Id = new Guid("d3b924d1-68ad-429f-a6e4-fab48b251470"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("cdc390d5-0649-441d-a086-df2e3b9d3512"),
                            SelectValueId = new Guid("a89a8323-4c82-4e55-8ef1-6d7150f564e9")
                        },
                        new
                        {
                            Id = new Guid("5748698c-fc7f-437e-867c-d3c3dc4dcf4e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d"),
                            SelectValueId = new Guid("9353f2ee-f074-488b-a359-f2fc6f66da51")
                        },
                        new
                        {
                            Id = new Guid("3ecfed41-1b06-4dca-b3e1-ed84459e2493"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d"),
                            SelectValueId = new Guid("a0e02d9f-03b5-49e0-9ae8-b34a419bc203")
                        },
                        new
                        {
                            Id = new Guid("a08ba21d-c850-4485-aabc-c42a1a016953"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d"),
                            SelectValueId = new Guid("959e5b30-6ad1-4102-8dce-f1395b8ae73e")
                        },
                        new
                        {
                            Id = new Guid("497d2236-48a4-46a2-90c5-ef6f7d13f6a8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SectionId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d"),
                            SelectValueId = new Guid("a89a8323-4c82-4e55-8ef1-6d7150f564e9")
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Url", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AnchorText")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("anchor_text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Href")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("href");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("project_id");

                    b.HasKey("Id")
                        .HasName("pk_urls");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_urls_project_id");

                    b.ToTable("urls");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.UrlRole", b =>
                {
                    b.Property<Guid>("UrlId")
                        .HasColumnType("uuid")
                        .HasColumnName("url_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.HasKey("UrlId", "RoleId")
                        .HasName("pk_url_roles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_url_roles_role_id");

                    b.ToTable("url_roles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockout_end");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalized_email");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalized_user_name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("person_id");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_asp_net_users");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasDatabaseName("ix_asp_net_users_person_id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("address_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_venues");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasDatabaseName("ix_venues_address_id");

                    b.ToTable("venues");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Views.AppointmentForPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_appointment_for_user");

                    b.ToTable("AppointmentForUser", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PersonAddress", b =>
                {
                    b.HasBaseType("Orso.Arpa.Domain.Entities.Address");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("person_id");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("type_id");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("ix_addresses_person_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_addresses_type_id");

                    b.HasDiscriminator().HasValue("PersonAddress");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_asp_net_role_claims_asp_net_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_claims_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_logins_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_asp_net_user_roles_asp_net_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_roles_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_asp_net_user_tokens_asp_net_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Address", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Region", "Region")
                        .WithMany("Addresses")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_addresses_regions_region_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_appointments_select_value_mappings_category_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Expectation")
                        .WithMany()
                        .HasForeignKey("ExpectationId")
                        .HasConstraintName("fk_appointments_select_value_mappings_expectation_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Salary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .HasConstraintName("fk_appointments_select_value_mappings_salary_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "SalaryPattern")
                        .WithMany()
                        .HasForeignKey("SalaryPatternId")
                        .HasConstraintName("fk_appointments_select_value_mappings_salary_pattern_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("fk_appointments_select_value_mappings_status_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Venue", "Venue")
                        .WithMany("Appointments")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("fk_appointments_venues_venue_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Expectation");

                    b.Navigation("Salary");

                    b.Navigation("SalaryPattern");

                    b.Navigation("Status");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentParticipation", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentParticipations")
                        .HasForeignKey("AppointmentId")
                        .HasConstraintName("fk_appointment_participations_appointments_appointment_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("AppointmentParticipations")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_appointment_participations_persons_person_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Prediction")
                        .WithMany()
                        .HasForeignKey("PredictionId")
                        .HasConstraintName("fk_appointment_participations_select_value_mappings_prediction")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .HasConstraintName("fk_appointment_participations_select_value_mappings_result_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Appointment");

                    b.Navigation("Person");

                    b.Navigation("Prediction");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentRoom", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentRooms")
                        .HasForeignKey("AppointmentId")
                        .HasConstraintName("fk_appointment_rooms_appointments_appointment_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Room", "Room")
                        .WithMany("AppointmentRooms")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_appointment_rooms_rooms_room_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Appointment");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Audition", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithOne("Audition")
                        .HasForeignKey("Orso.Arpa.Domain.Entities.Audition", "AppointmentId")
                        .HasConstraintName("fk_auditions_appointments_appointment_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", null)
                        .WithMany("Auditions")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_auditions_musician_profiles_musician_profile_id");

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "RepetitorStatus")
                        .WithMany()
                        .HasForeignKey("RepetitorStatusId")
                        .HasConstraintName("fk_auditions_select_value_mappings_repetitor_status_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("fk_auditions_select_value_mappings_status_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Appointment");

                    b.Navigation("RepetitorStatus");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AvailableDocument", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("AvailableDocuments")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_available_documents_musician_profiles_musician_profile_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "SelectValueMapping")
                        .WithMany()
                        .HasForeignKey("SelectValueMappingId")
                        .HasConstraintName("fk_available_documents_select_value_mappings_select_value_mapp")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MusicianProfile");

                    b.Navigation("SelectValueMapping");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfile", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "InquiryStatusPerformer")
                        .WithMany()
                        .HasForeignKey("InquiryStatusPerformerId")
                        .HasConstraintName("fk_musician_profiles_select_value_mappings_inquiry_status_perf")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "InquiryStatusStaff")
                        .WithMany()
                        .HasForeignKey("InquiryStatusStaffId")
                        .HasConstraintName("fk_musician_profiles_select_value_mappings_inquiry_status_staf")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Instrument")
                        .WithMany("MusicianProfiles")
                        .HasForeignKey("InstrumentId")
                        .HasConstraintName("fk_musician_profiles_sections_instrument_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("MusicianProfiles")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_musician_profiles_persons_person_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId")
                        .HasConstraintName("fk_musician_profiles_select_value_mappings_qualification_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Salary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .HasConstraintName("fk_musician_profiles_select_value_mappings_salary_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("InquiryStatusPerformer");

                    b.Navigation("InquiryStatusStaff");

                    b.Navigation("Instrument");

                    b.Navigation("Person");

                    b.Navigation("Qualification");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfileCurriculumVitaeReference", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.CurriculumVitaeReference", "CurriculumVitaeReference")
                        .WithMany("MusicianProfileCurriculumVitaeReferences")
                        .HasForeignKey("CurriculumVitaeReferenceId")
                        .HasConstraintName("fk_musician_profile_curriculum_vitae_references_curriculum_vit")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("MusicianProfileCurriculumVitaeReferences")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_musician_profile_curriculum_vitae_references_musician_profi")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CurriculumVitaeReference");

                    b.Navigation("MusicianProfile");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfileEducation", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Education", "Education")
                        .WithMany("MusicianProfileEducations")
                        .HasForeignKey("EducationId")
                        .HasConstraintName("fk_musician_profile_educations_educations_education_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("MusicianProfileEducations")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_musician_profile_educations_musician_profiles_musician_prof")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Education");

                    b.Navigation("MusicianProfile");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfilePositionPerformer", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("PreferredPositionsPerformer")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_musician_profile_positions_performer_musician_profiles_musi")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueSection", "SelectValueSection")
                        .WithMany("MusicianProfilePositionsAsPerformer")
                        .HasForeignKey("SelectValueSectionId")
                        .HasConstraintName("fk_musician_profile_positions_performer_select_value_sections_")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MusicianProfile");

                    b.Navigation("SelectValueSection");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfilePositionStaff", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("PreferredPositionsStaff")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_musician_profile_positions_staff_musician_profiles_musician")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueSection", "SelectValueSection")
                        .WithMany("MusicianProfilePositionsAsStaff")
                        .HasForeignKey("SelectValueSectionId")
                        .HasConstraintName("fk_musician_profile_positions_staff_select_value_sections_sele")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MusicianProfile");

                    b.Navigation("SelectValueSection");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfileSection", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "InstrumentAvailability")
                        .WithMany()
                        .HasForeignKey("InstrumentAvailabilityId")
                        .HasConstraintName("fk_musician_profile_sections_select_value_mappings_instrument_")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("DoublingInstruments")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_musician_profile_sections_musician_profiles_musician_profil")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Section")
                        .WithMany("MusicianProfileSections")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("fk_musician_profile_sections_sections_section_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("InstrumentAvailability");

                    b.Navigation("MusicianProfile");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PersonSection", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("StakeholderGroups")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_person_sections_persons_person_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Section")
                        .WithMany("StakeholderGroups")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("fk_person_sections_sections_section_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Person");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PreferredGenre", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("PreferredGenres")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_preferred_genres_musician_profiles_musician_profile_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "SelectValueMapping")
                        .WithMany()
                        .HasForeignKey("SelectValueMappingId")
                        .HasConstraintName("fk_preferred_genres_select_value_mappings_select_value_mapping")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MusicianProfile");

                    b.Navigation("SelectValueMapping");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Project", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .HasConstraintName("fk_projects_select_value_mappings_genre_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_projects_projects_parent_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .HasConstraintName("fk_projects_select_value_mappings_state_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_projects_select_value_mappings_type_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Genre");

                    b.Navigation("Parent");

                    b.Navigation("State");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectAppointment", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("ProjectAppointments")
                        .HasForeignKey("AppointmentId")
                        .HasConstraintName("fk_project_appointments_appointments_appointment_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Project")
                        .WithMany("ProjectAppointments")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_project_appointments_projects_project_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Appointment");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectParticipation", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "InvitationStatus")
                        .WithMany()
                        .HasForeignKey("InvitationStatusId")
                        .HasConstraintName("fk_project_participations_select_value_mappings_invitation_sta")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("ProjectParticipations")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_project_participations_musician_profiles_musician_profile_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "ParticipationStatusInner")
                        .WithMany()
                        .HasForeignKey("ParticipationStatusInnerId")
                        .HasConstraintName("fk_project_participations_select_value_mappings_participation_")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "ParticipationStatusInternal")
                        .WithMany()
                        .HasForeignKey("ParticipationStatusInternalId")
                        .HasConstraintName("fk_project_participations_select_value_mappings_participation_1")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Project")
                        .WithMany("ProjectParticipations")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_project_participations_projects_project_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InvitationStatus");

                    b.Navigation("MusicianProfile");

                    b.Navigation("ParticipationStatusInner");

                    b.Navigation("ParticipationStatusInternal");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_refresh_tokens_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RegionPreferencePerformance", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("RegionPreferencePerformances")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_region_preferences_performance_musician_profiles_musician_p")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Venue", "Venue")
                        .WithMany("RegionPreferencePerformances")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("fk_region_preferences_performance_venues_venue_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MusicianProfile");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RegionPreferenceRehearsal", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("RegionPreferenceRehearsals")
                        .HasForeignKey("MusicianProfileId")
                        .HasConstraintName("fk_region_preferences_rehearsal_musician_profiles_musician_pro")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Venue", "Venue")
                        .WithMany("RegionPreferenceRehearsals")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("fk_region_preferences_rehearsal_venues_venue_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MusicianProfile");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Room", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Venue", "Venue")
                        .WithMany("Rooms")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("fk_rooms_venues_venue_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Section", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_sections_sections_parent_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SectionAppointment", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("SectionAppointments")
                        .HasForeignKey("AppointmentId")
                        .HasConstraintName("fk_section_appointments_appointments_appointment_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Section")
                        .WithMany("SectionAppointments")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("fk_section_appointments_sections_section_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Appointment");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueMapping", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueCategory", "SelectValueCategory")
                        .WithMany("SelectValueMappings")
                        .HasForeignKey("SelectValueCategoryId")
                        .HasConstraintName("fk_select_value_mappings_select_value_categories_select_value_")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValue", "SelectValue")
                        .WithMany("SelectValueMappings")
                        .HasForeignKey("SelectValueId")
                        .HasConstraintName("fk_select_value_mappings_select_values_select_value_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SelectValue");

                    b.Navigation("SelectValueCategory");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueSection", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Section")
                        .WithMany("SelectValueSections")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("fk_select_value_sections_sections_section_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValue", "SelectValue")
                        .WithMany("InstrumentParts")
                        .HasForeignKey("SelectValueId")
                        .HasConstraintName("fk_select_value_sections_select_values_select_value_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("SelectValue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Url", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Project")
                        .WithMany("Urls")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("fk_urls_projects_project_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.UrlRole", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Role", "Role")
                        .WithMany("UrlRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_url_roles_roles_role_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.Url", "Url")
                        .WithMany("UrlRoles")
                        .HasForeignKey("UrlId")
                        .HasConstraintName("fk_url_roles_urls_url_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Role");

                    b.Navigation("Url");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.User", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Orso.Arpa.Domain.Entities.User", "PersonId")
                        .HasConstraintName("fk_asp_net_users_persons_person_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Venue", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Address", "Address")
                        .WithOne("Venue")
                        .HasForeignKey("Orso.Arpa.Domain.Entities.Venue", "AddressId")
                        .HasConstraintName("fk_venues_addresses_address_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PersonAddress", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_addresses_persons_person_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_addresses_select_value_mappings_type_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Person");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Address", b =>
                {
                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Appointment", b =>
                {
                    b.Navigation("AppointmentParticipations");

                    b.Navigation("AppointmentRooms");

                    b.Navigation("Audition");

                    b.Navigation("ProjectAppointments");

                    b.Navigation("SectionAppointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.CurriculumVitaeReference", b =>
                {
                    b.Navigation("MusicianProfileCurriculumVitaeReferences");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Education", b =>
                {
                    b.Navigation("MusicianProfileEducations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfile", b =>
                {
                    b.Navigation("Auditions");

                    b.Navigation("AvailableDocuments");

                    b.Navigation("DoublingInstruments");

                    b.Navigation("MusicianProfileCurriculumVitaeReferences");

                    b.Navigation("MusicianProfileEducations");

                    b.Navigation("PreferredGenres");

                    b.Navigation("PreferredPositionsPerformer");

                    b.Navigation("PreferredPositionsStaff");

                    b.Navigation("ProjectParticipations");

                    b.Navigation("RegionPreferencePerformances");

                    b.Navigation("RegionPreferenceRehearsals");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Person", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("AppointmentParticipations");

                    b.Navigation("MusicianProfiles");

                    b.Navigation("StakeholderGroups");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Project", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ProjectAppointments");

                    b.Navigation("ProjectParticipations");

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Region", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Role", b =>
                {
                    b.Navigation("UrlRoles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Room", b =>
                {
                    b.Navigation("AppointmentRooms");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Section", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("MusicianProfiles");

                    b.Navigation("MusicianProfileSections");

                    b.Navigation("SectionAppointments");

                    b.Navigation("SelectValueSections");

                    b.Navigation("StakeholderGroups");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValue", b =>
                {
                    b.Navigation("InstrumentParts");

                    b.Navigation("SelectValueMappings");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueCategory", b =>
                {
                    b.Navigation("SelectValueMappings");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueSection", b =>
                {
                    b.Navigation("MusicianProfilePositionsAsPerformer");

                    b.Navigation("MusicianProfilePositionsAsStaff");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Url", b =>
                {
                    b.Navigation("UrlRoles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Venue", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("RegionPreferencePerformances");

                    b.Navigation("RegionPreferenceRehearsals");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
