// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orso.Arpa.Persistence.DataAccess;

namespace Orso.Arpa.Persistence.Migrations
{
    [DbContext(typeof(ArpaContext))]
    [Migration("20210213103432_AddedPropertyCreatedAtToUser")]
    partial class AddedPropertyCreatedAtToUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UrbanDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Addresses");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Address");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmolumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmolumentPatternId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExpectationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InternalDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PublicDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EmolumentId");

                    b.HasIndex("EmolumentPatternId");

                    b.HasIndex("ExpectationId");

                    b.HasIndex("StatusId");

                    b.HasIndex("VenueId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentParticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PredictionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResultId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PredictionId");

                    b.HasIndex("ResultId");

                    b.ToTable("AppointmentParticipations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentRoom", b =>
                {
                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppointmentId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("AppointmentRooms");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfessional")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SectionId");

                    b.ToTable("MusicianProfiles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("GivenName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("ParentId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectAppointment", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "AppointmentId");

                    b.HasIndex("AppointmentId");

                    b.ToTable("ProjectAppointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectParticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MusicianProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MusicianProfileId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectParticipations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RevokedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e6c559e-8d50-488d-a1ea-5dbc0f44ba9b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Freiburg"
                        },
                        new
                        {
                            Id = new Guid("ac9544e3-e756-486c-a1dc-62988a882ac2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Stuttgart"
                        },
                        new
                        {
                            Id = new Guid("ca3c9cce-1aee-4c50-93e1-be963542741a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Berlin"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2cfb7a0-4981-4dda-b988-8ba74957f6a4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Choir"
                        },
                        new
                        {
                            Id = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Orchestra"
                        },
                        new
                        {
                            Id = new Guid("e0fdb057-c9b7-4477-be75-cbf920a26af6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Soloist"
                        },
                        new
                        {
                            Id = new Guid("c9403ca4-6b75-44c3-b567-e53bbd78fb75"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("a19fa9af-dcba-48e3-bc21-be2130fa528c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Miscellaneous"
                        },
                        new
                        {
                            Id = new Guid("3ed0960c-1eed-4a45-a1ef-343aa8e7b2d6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Female Voices",
                            ParentId = new Guid("c2cfb7a0-4981-4dda-b988-8ba74957f6a4")
                        },
                        new
                        {
                            Id = new Guid("4599103d-f220-4744-92d1-7c6993e9bda4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Male Voices",
                            ParentId = new Guid("c2cfb7a0-4981-4dda-b988-8ba74957f6a4")
                        },
                        new
                        {
                            Id = new Guid("48337b78-70f0-493e-911b-296632b06ef8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Deep Female Voices",
                            ParentId = new Guid("3ed0960c-1eed-4a45-a1ef-343aa8e7b2d6")
                        },
                        new
                        {
                            Id = new Guid("5d469fc5-b3e6-40b8-9fa9-542981083ce3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "High Female Voices",
                            ParentId = new Guid("3ed0960c-1eed-4a45-a1ef-343aa8e7b2d6")
                        },
                        new
                        {
                            Id = new Guid("b9673cfd-7cdb-472c-86e0-1304cbb3840a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Deep Male Voices",
                            ParentId = new Guid("4599103d-f220-4744-92d1-7c6993e9bda4")
                        },
                        new
                        {
                            Id = new Guid("7924daef-2542-4648-a42f-4c4374ee09db"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "High Male Voices",
                            ParentId = new Guid("4599103d-f220-4744-92d1-7c6993e9bda4")
                        },
                        new
                        {
                            Id = new Guid("a06431be-f9d6-44dc-8fdb-fbf8aa2bb940"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Alto",
                            ParentId = new Guid("48337b78-70f0-493e-911b-296632b06ef8")
                        },
                        new
                        {
                            Id = new Guid("e809ee90-23f9-44de-b80e-2fddd5ee3683"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Alto 1",
                            ParentId = new Guid("a06431be-f9d6-44dc-8fdb-fbf8aa2bb940")
                        },
                        new
                        {
                            Id = new Guid("50dfa2be-85e2-4638-aa53-22dadc97a844"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Alto 2",
                            ParentId = new Guid("a06431be-f9d6-44dc-8fdb-fbf8aa2bb940")
                        },
                        new
                        {
                            Id = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Soprano",
                            ParentId = new Guid("5d469fc5-b3e6-40b8-9fa9-542981083ce3")
                        },
                        new
                        {
                            Id = new Guid("8470ddf0-43ab-477e-b3bc-47ede014b359"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Soprano 1",
                            ParentId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d")
                        },
                        new
                        {
                            Id = new Guid("22d7cf92-7b29-4cf1-a6fa-2954377589b4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Soprano 2",
                            ParentId = new Guid("7daa1394-a70d-4a24-88a6-ccf511d75c4d")
                        },
                        new
                        {
                            Id = new Guid("1579d7e7-4f55-4532-a078-69fd1ec939da"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Tenor",
                            ParentId = new Guid("7924daef-2542-4648-a42f-4c4374ee09db")
                        },
                        new
                        {
                            Id = new Guid("3db46ff0-9165-46cc-8f28-6a1d52dee518"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Tenor 1",
                            ParentId = new Guid("1579d7e7-4f55-4532-a078-69fd1ec939da")
                        },
                        new
                        {
                            Id = new Guid("afef89cf-90e1-4d4f-83ab-d2b47e97af0f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Tenor 2",
                            ParentId = new Guid("1579d7e7-4f55-4532-a078-69fd1ec939da")
                        },
                        new
                        {
                            Id = new Guid("e7dd10ef-1c39-4440-9a6c-65d397f010ca"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Basso",
                            ParentId = new Guid("b9673cfd-7cdb-472c-86e0-1304cbb3840a")
                        },
                        new
                        {
                            Id = new Guid("bfe0e1ca-95ce-4cb6-a9c9-3c23c70bab21"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Basso 1",
                            ParentId = new Guid("e7dd10ef-1c39-4440-9a6c-65d397f010ca")
                        },
                        new
                        {
                            Id = new Guid("61fa66ec-3103-43fe-800c-930547dff82c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Basso 2",
                            ParentId = new Guid("e7dd10ef-1c39-4440-9a6c-65d397f010ca")
                        },
                        new
                        {
                            Id = new Guid("b289cfe7-d66e-48d8-83a9-f4b1f7710863"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Wind Section",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("1bde9862-3ed5-45cd-8d80-0a52c6b4c0fb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Strings",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("0558a5ff-ee27-44a1-82ab-d0c0cc018c3c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Percussion",
                            ParentId = new Guid("308659d6-6014-4d2c-a62a-be75bf202e62")
                        },
                        new
                        {
                            Id = new Guid("a6abdeec-8185-40ac-a418-2e422bb9adbd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Woodwind",
                            ParentId = new Guid("b289cfe7-d66e-48d8-83a9-f4b1f7710863")
                        },
                        new
                        {
                            Id = new Guid("f4c70178-d069-44dc-8956-7160c5fef52e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Brass",
                            ParentId = new Guid("b289cfe7-d66e-48d8-83a9-f4b1f7710863")
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SectionAppointment", b =>
                {
                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SectionId", "AppointmentId");

                    b.HasIndex("AppointmentId");

                    b.ToTable("SectionAppointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SelectValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e60dfdf-e7c9-4378-b1af-dcb53fe20022"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Partly"
                        },
                        new
                        {
                            Id = new Guid("f0f26735-b796-4a70-a20c-92e0e2910bb4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Absent"
                        },
                        new
                        {
                            Id = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Ambiguous"
                        },
                        new
                        {
                            Id = new Guid("7c894293-82c2-4320-82f5-f77955feae5a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Assembly"
                        },
                        new
                        {
                            Id = new Guid("a85738d9-e68e-4584-bac8-ccca8d539636"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Audition"
                        },
                        new
                        {
                            Id = new Guid("5e3edcf4-863b-433b-ae72-b6bb7e4dfc95"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Awaiting Poll"
                        },
                        new
                        {
                            Id = new Guid("43d8eafa-ef3f-4034-8c88-9a0b68c33ab1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Chamber Music"
                        },
                        new
                        {
                            Id = new Guid("8f64e072-6523-4158-b92e-5c38c8ebca59"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Choreography Rehearsal"
                        },
                        new
                        {
                            Id = new Guid("87a541e7-706a-47f3-99b3-8b2d6de7a134"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Classical Music"
                        },
                        new
                        {
                            Id = new Guid("71779748-6d3c-496a-9842-8dc508de6676"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Concert"
                        },
                        new
                        {
                            Id = new Guid("34a52363-4a57-4019-abcf-0c9880246891"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Confirmed"
                        },
                        new
                        {
                            Id = new Guid("5b57a267-f331-41df-995a-93b60fc206ff"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Crossover"
                        },
                        new
                        {
                            Id = new Guid("4ee7d317-6d71-4d6e-b45a-954c8c7dcf03"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Don't know yet"
                        },
                        new
                        {
                            Id = new Guid("5d31f1f7-73fd-42a4-a429-33fab925b15d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Awaiting Scan"
                        },
                        new
                        {
                            Id = new Guid("b60d04e0-9841-41c9-9d24-976c8363a33d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Glöckner 2018"
                        },
                        new
                        {
                            Id = new Guid("86bf6480-787a-4fe0-9d79-0f8d0d36acc4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Inapplicable"
                        },
                        new
                        {
                            Id = new Guid("a4734d39-cbb9-4635-b3ae-f4e1192a6bd1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Mandatory"
                        },
                        new
                        {
                            Id = new Guid("ae6dc389-93eb-4d96-bd66-c61dd81155ea"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Meeting"
                        },
                        new
                        {
                            Id = new Guid("88b763ac-8093-4c5d-a881-85be1fb8a24d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "No"
                        },
                        new
                        {
                            Id = new Guid("9c0295b7-1b16-4fd6-a7de-ecd724c823b3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Optional"
                        },
                        new
                        {
                            Id = new Guid("d91def3e-4c55-42c7-ac56-147846be6bfa"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Concert Lump Sum 9€/11€ at 10h"
                        },
                        new
                        {
                            Id = new Guid("a10ce98a-b903-4dca-801d-3afb07711877"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Concert Lump Sum 9 €/11€ at 12h"
                        },
                        new
                        {
                            Id = new Guid("ddb23793-af96-4ea6-9b27-5e2dcfc90b65"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Concert Lump Sum 1808"
                        },
                        new
                        {
                            Id = new Guid("717a27d5-2ef3-4266-92a8-84b3600115eb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Orchestra Rehearsal Hourly Rate 9/11"
                        },
                        new
                        {
                            Id = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("79de43be-57cc-484f-bff2-57f3ba78dbe9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Photo Session"
                        },
                        new
                        {
                            Id = new Guid("362efd25-e1d2-496d-b7fa-884371a58682"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Pending"
                        },
                        new
                        {
                            Id = new Guid("404f1bfd-2819-47c2-a78b-f3dbd4bc8953"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Photo Session"
                        },
                        new
                        {
                            Id = new Guid("313445ca-57fa-45f0-8515-325949d60726"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Present"
                        },
                        new
                        {
                            Id = new Guid("99d192e1-332a-494e-b821-075be14211be"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Refused"
                        },
                        new
                        {
                            Id = new Guid("130f63c3-9d2f-4301-b062-236c78663e3b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Rehearsal"
                        },
                        new
                        {
                            Id = new Guid("efb2b680-c904-481a-ba7c-9e6a64a998c3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Rehearsal Weekend Choir"
                        },
                        new
                        {
                            Id = new Guid("c76de830-3746-449a-8f1f-bd5d9233655c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Scheduled"
                        },
                        new
                        {
                            Id = new Guid("4418bfea-0e79-4f76-9e20-527644f654e0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Sectional Rehearsal"
                        },
                        new
                        {
                            Id = new Guid("dfe6e73e-9a15-4094-80a5-151a64f3b4db"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "See Comment"
                        },
                        new
                        {
                            Id = new Guid("52d67a48-e99f-4c2f-ac9b-0302d5d3e518"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Show"
                        },
                        new
                        {
                            Id = new Guid("2567e7be-5a5a-4671-b5ad-765c1e80fd41"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Special Case"
                        },
                        new
                        {
                            Id = new Guid("61dd102e-d449-40e1-8c6b-4ead99403ac1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Stage Briefing"
                        },
                        new
                        {
                            Id = new Guid("3a6218de-6dfc-4aa9-a2a7-f1da20fd61cb"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Transfer"
                        },
                        new
                        {
                            Id = new Guid("a0b98a79-7c74-4093-8f5f-79003cad219a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Voice Formation"
                        },
                        new
                        {
                            Id = new Guid("d6848ef8-51c6-44e3-bc29-af1df87afcc1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Watch Show"
                        },
                        new
                        {
                            Id = new Guid("5d50c5c3-e85a-4810-ac46-49572e1ca2f5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Workshop"
                        },
                        new
                        {
                            Id = new Guid("75a017d3-dca5-49ec-9bbd-3b01b159ba5b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Yes"
                        },
                        new
                        {
                            Id = new Guid("608b5583-a8dc-48d7-8afa-ef87ca0327f0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Private"
                        },
                        new
                        {
                            Id = new Guid("db1d2c88-a7b3-41c3-a17f-4fd7fe9faca5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Property")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Table")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Property");

                    b.HasIndex("Table");

                    b.ToTable("SelectValueCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Address Type",
                            Property = "Type",
                            Table = "PersonAddress"
                        },
                        new
                        {
                            Id = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Category",
                            Property = "Category",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Emolument",
                            Property = "Emolument",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Emolument Pattern",
                            Property = "EmolumentPattern",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Expectation KBB",
                            Property = "Expectation",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Prediction Participant",
                            Property = "Prediction",
                            Table = "AppointmentParticipation"
                        },
                        new
                        {
                            Id = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Result",
                            Property = "Result",
                            Table = "AppointmentParticipation"
                        },
                        new
                        {
                            Id = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Status",
                            Property = "Status",
                            Table = "Appointment"
                        },
                        new
                        {
                            Id = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Name = "Genre",
                            Property = "Genre",
                            Table = "Project"
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SelectValueCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SelectValueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SelectValueCategoryId");

                    b.HasIndex("SelectValueId");

                    b.ToTable("SelectValueMappings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb44b625-7086-48e6-bcc6-a004dd472012"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            SelectValueId = new Guid("608b5583-a8dc-48d7-8afa-ef87ca0327f0")
                        },
                        new
                        {
                            Id = new Guid("63437ce4-b63b-4558-9f91-1474b896bf1c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            SelectValueId = new Guid("db1d2c88-a7b3-41c3-a17f-4fd7fe9faca5")
                        },
                        new
                        {
                            Id = new Guid("f81c698e-0017-41c0-8ff9-78dbaa3d2676"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("d438c160-0588-41fa-93c3-cd33c0f97063"),
                            SelectValueId = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0")
                        },
                        new
                        {
                            Id = new Guid("c1b6d08b-f31e-4f38-a8c0-761e42fbd2b7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("ae6dc389-93eb-4d96-bd66-c61dd81155ea")
                        },
                        new
                        {
                            Id = new Guid("dd4556b3-d8b3-4002-8bde-68e327945916"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("61dd102e-d449-40e1-8c6b-4ead99403ac1")
                        },
                        new
                        {
                            Id = new Guid("ac1ccdd4-39aa-4767-95ea-099a829f275b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("8f64e072-6523-4158-b92e-5c38c8ebca59")
                        },
                        new
                        {
                            Id = new Guid("d8c99a34-025d-455b-b317-92453da36631"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("52d67a48-e99f-4c2f-ac9b-0302d5d3e518")
                        },
                        new
                        {
                            Id = new Guid("e9c79ae9-5498-459d-8852-9f135da7afae"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("404f1bfd-2819-47c2-a78b-f3dbd4bc8953")
                        },
                        new
                        {
                            Id = new Guid("0c8af1d2-ae39-464d-9e03-a1487cfd7321"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("71779748-6d3c-496a-9842-8dc508de6676")
                        },
                        new
                        {
                            Id = new Guid("cfc62012-4d74-4cf6-a06e-7fc3dbacbff8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("5d50c5c3-e85a-4810-ac46-49572e1ca2f5")
                        },
                        new
                        {
                            Id = new Guid("466aa422-0ef2-4e7f-a6a8-d188d80491f6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("79de43be-57cc-484f-bff2-57f3ba78dbe9")
                        },
                        new
                        {
                            Id = new Guid("86672779-5e70-4965-b59c-032086d00914"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("130f63c3-9d2f-4301-b062-236c78663e3b")
                        },
                        new
                        {
                            Id = new Guid("5b89cf6e-0194-4e01-bb32-8b1813a51e16"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("efb2b680-c904-481a-ba7c-9e6a64a998c3")
                        },
                        new
                        {
                            Id = new Guid("642cc60f-e582-47ed-a40f-ea490dd3d950"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("d6848ef8-51c6-44e3-bc29-af1df87afcc1")
                        },
                        new
                        {
                            Id = new Guid("a39a92fe-bea2-40fa-817b-e7272bfc9d4b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("dfe6e73e-9a15-4094-80a5-151a64f3b4db")
                        },
                        new
                        {
                            Id = new Guid("b62cc155-f1a9-4904-8e6a-95e85339da83"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("a0b98a79-7c74-4093-8f5f-79003cad219a")
                        },
                        new
                        {
                            Id = new Guid("2634c0cc-31d2-4f61-813d-7ec60fc8ab34"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("4418bfea-0e79-4f76-9e20-527644f654e0")
                        },
                        new
                        {
                            Id = new Guid("4e9d4a1b-cae7-4002-93a1-cef3f209146b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("3a6218de-6dfc-4aa9-a2a7-f1da20fd61cb")
                        },
                        new
                        {
                            Id = new Guid("547b561e-cea7-4296-9b1d-4dd41e0d5179"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("7c894293-82c2-4320-82f5-f77955feae5a")
                        },
                        new
                        {
                            Id = new Guid("9cf090a3-680d-4770-b929-0a0d080576a0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("a85738d9-e68e-4584-bac8-ccca8d539636")
                        },
                        new
                        {
                            Id = new Guid("609f9ece-42ce-4cc9-a89b-1fec1ddbc5fe"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("791c7439-c72a-47ca-ad8d-193e2cad09e1"),
                            SelectValueId = new Guid("e030b53e-3615-4cd6-9fe6-0d818632a4b0")
                        },
                        new
                        {
                            Id = new Guid("88da1c17-9efc-4f69-ba0f-39c76592845b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("75a017d3-dca5-49ec-9bbd-3b01b159ba5b")
                        },
                        new
                        {
                            Id = new Guid("aedc27f3-e2e8-4368-ad69-1ab1c3dd7974"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("88b763ac-8093-4c5d-a881-85be1fb8a24d")
                        },
                        new
                        {
                            Id = new Guid("5b936e5f-3743-4cc3-91af-0cc8742c846e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2")
                        },
                        new
                        {
                            Id = new Guid("bbe90120-55f3-4474-a059-1334d0adaa57"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("1d62ed51-c99e-4b55-83d7-f9f9a5b8234e"),
                            SelectValueId = new Guid("2567e7be-5a5a-4671-b5ad-765c1e80fd41")
                        },
                        new
                        {
                            Id = new Guid("8b51c75f-d597-48ef-8451-5f5fc32d57d1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("b60d04e0-9841-41c9-9d24-976c8363a33d")
                        },
                        new
                        {
                            Id = new Guid("104fc525-bb0b-49dc-b2b2-9a8f63e45c92"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("d91def3e-4c55-42c7-ac56-147846be6bfa")
                        },
                        new
                        {
                            Id = new Guid("f15b88b2-395d-4195-af25-8b8879640baf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("a10ce98a-b903-4dca-801d-3afb07711877")
                        },
                        new
                        {
                            Id = new Guid("74278b65-fd54-49d2-9cd2-061dd6318c7d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("ddb23793-af96-4ea6-9b27-5e2dcfc90b65")
                        },
                        new
                        {
                            Id = new Guid("836c69d6-46f1-40d4-b75d-6aa86f9ec066"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("e4ff93b9-318e-41ed-b067-51ee94f41adf"),
                            SelectValueId = new Guid("717a27d5-2ef3-4266-92a8-84b3600115eb")
                        },
                        new
                        {
                            Id = new Guid("867622fa-7aa5-43f3-b3ef-5290d1f61734"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("362efd25-e1d2-496d-b7fa-884371a58682")
                        },
                        new
                        {
                            Id = new Guid("647f674a-bc2f-4d3a-9ce4-f0aefa98cd9d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("34a52363-4a57-4019-abcf-0c9880246891")
                        },
                        new
                        {
                            Id = new Guid("b09bc4a6-06ab-4d45-8b82-7971e662ccb5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("a4734d39-cbb9-4635-b3ae-f4e1192a6bd1")
                        },
                        new
                        {
                            Id = new Guid("d64abb04-dc1c-4e17-bed5-a62196a59c49"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("0fdb6218-54fa-4e94-a880-2a65fc1cf9d7"),
                            SelectValueId = new Guid("9c0295b7-1b16-4fd6-a7de-ecd724c823b3")
                        },
                        new
                        {
                            Id = new Guid("319d508e-a6e2-437e-b48b-6be51e3459bd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("75a017d3-dca5-49ec-9bbd-3b01b159ba5b")
                        },
                        new
                        {
                            Id = new Guid("c9225a82-0348-41bb-a591-7726f8079cde"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("1e60dfdf-e7c9-4378-b1af-dcb53fe20022")
                        },
                        new
                        {
                            Id = new Guid("17d201fc-777b-43bb-9c46-0d07737a8ab7"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("88b763ac-8093-4c5d-a881-85be1fb8a24d")
                        },
                        new
                        {
                            Id = new Guid("50e6049b-a9cd-400b-a475-e2563147aebc"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("5cf52155-927f-4d64-a482-348f952bab21"),
                            SelectValueId = new Guid("4ee7d317-6d71-4d6e-b45a-954c8c7dcf03")
                        },
                        new
                        {
                            Id = new Guid("3801aa69-cc4e-4fd5-947c-bfdd4e95d48e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("313445ca-57fa-45f0-8515-325949d60726")
                        },
                        new
                        {
                            Id = new Guid("ade78d45-b010-4ed7-87f0-e30e0558f151"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("f0f26735-b796-4a70-a20c-92e0e2910bb4")
                        },
                        new
                        {
                            Id = new Guid("ff994b2c-a3bd-4676-a974-f53d4fa562ba"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("86bf6480-787a-4fe0-9d79-0f8d0d36acc4")
                        },
                        new
                        {
                            Id = new Guid("8b7d7f26-b7e5-42e2-afc1-cedddbae841a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2")
                        },
                        new
                        {
                            Id = new Guid("7fb30d45-1faf-4f6a-ac5d-436204ad8e69"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("f5d4763e-5862-4b62-ab92-2748ad213b10"),
                            SelectValueId = new Guid("5d31f1f7-73fd-42a4-a429-33fab925b15d")
                        },
                        new
                        {
                            Id = new Guid("36176b7e-0926-43d6-b19a-72838ccd2acd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("34a52363-4a57-4019-abcf-0c9880246891")
                        },
                        new
                        {
                            Id = new Guid("93033f7e-a3c1-45e3-8a17-021d0a4abe5a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("c76de830-3746-449a-8f1f-bd5d9233655c")
                        },
                        new
                        {
                            Id = new Guid("0126fded-0a82-4b53-85e4-1c04a4f79296"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("99d192e1-332a-494e-b821-075be14211be")
                        },
                        new
                        {
                            Id = new Guid("b6cf76a5-ec3f-4e81-9499-174d33bb7249"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("66a6446a-7191-4f14-9c5d-052891b9c5a2")
                        },
                        new
                        {
                            Id = new Guid("4dc9db05-357a-43a6-ba20-f2a9e5033802"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("09be8eff-72e4-40a8-a1ed-717deb185a69"),
                            SelectValueId = new Guid("5e3edcf4-863b-433b-ae72-b6bb7e4dfc95")
                        },
                        new
                        {
                            Id = new Guid("d733e38d-1d80-4054-b654-4ea4a128b0a8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("87a541e7-706a-47f3-99b3-8b2d6de7a134")
                        },
                        new
                        {
                            Id = new Guid("e7e78e76-3850-4eb5-892f-d90be6c256a4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("5b57a267-f331-41df-995a-93b60fc206ff")
                        },
                        new
                        {
                            Id = new Guid("29e1142f-aa9e-4b94-ae21-9a63f7b65c15"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            SelectValueCategoryId = new Guid("4649b6b9-1362-41c2-ac5c-884f216dff30"),
                            SelectValueId = new Guid("43d8eafa-ef3f-4034-8c88-9a0b68c33ab1")
                        });
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PersonAddress", b =>
                {
                    b.HasBaseType("Orso.Arpa.Domain.Entities.Address");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonId");

                    b.HasIndex("TypeId");

                    b.HasDiscriminator().HasValue("PersonAddress");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Address", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Region", "Region")
                        .WithMany("Addresses")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Category")
                        .WithMany("AppointmentsAsCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Emolument")
                        .WithMany("AppointmentsAsEmolument")
                        .HasForeignKey("EmolumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "EmolumentPattern")
                        .WithMany("AppointmentsAsEmolumentPattern")
                        .HasForeignKey("EmolumentPatternId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Expectation")
                        .WithMany("AppointmentsAsExpectation")
                        .HasForeignKey("ExpectationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Status")
                        .WithMany("AppointmentsAsStatus")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orso.Arpa.Domain.Entities.Venue", "Venue")
                        .WithMany("Appointments")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("Emolument");

                    b.Navigation("EmolumentPattern");

                    b.Navigation("Expectation");

                    b.Navigation("Status");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentParticipation", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentParticipations")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("AppointmentParticipations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Prediction")
                        .WithMany("AppointmentParticipationsAsPrediction")
                        .HasForeignKey("PredictionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Result")
                        .WithMany("AppointmentParticipationsAsResult")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Appointment");

                    b.Navigation("Person");

                    b.Navigation("Prediction");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.AppointmentRoom", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("AppointmentRooms")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Room", "Room")
                        .WithMany("AppointmentRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfile", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("MusicianProfiles")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Section")
                        .WithMany("MusicianProfiles")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Project", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Genre")
                        .WithMany("ProjectsAsGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Genre");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectAppointment", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("ProjectAppointments")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Project")
                        .WithMany("ProjectAppointments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.ProjectParticipation", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.MusicianProfile", "MusicianProfile")
                        .WithMany("ProjectParticipations")
                        .HasForeignKey("MusicianProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Project", "Project")
                        .WithMany("ProjectParticipations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MusicianProfile");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Room", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Venue", "Venue")
                        .WithMany("Rooms")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Section", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SectionAppointment", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Appointment", "Appointment")
                        .WithMany("SectionAppointments")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.Section", "Section")
                        .WithMany("SectionAppointments")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueMapping", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueCategory", "SelectValueCategory")
                        .WithMany("SelectValueMappings")
                        .HasForeignKey("SelectValueCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValue", "SelectValue")
                        .WithMany("SelectValueMappings")
                        .HasForeignKey("SelectValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SelectValue");

                    b.Navigation("SelectValueCategory");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.User", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Orso.Arpa.Domain.Entities.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Venue", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Address", "Address")
                        .WithOne("Venue")
                        .HasForeignKey("Orso.Arpa.Domain.Entities.Venue", "AddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.PersonAddress", b =>
                {
                    b.HasOne("Orso.Arpa.Domain.Entities.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Orso.Arpa.Domain.Entities.SelectValueMapping", "Type")
                        .WithMany("PersonAddresses")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Person");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Address", b =>
                {
                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Appointment", b =>
                {
                    b.Navigation("AppointmentParticipations");

                    b.Navigation("AppointmentRooms");

                    b.Navigation("ProjectAppointments");

                    b.Navigation("SectionAppointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.MusicianProfile", b =>
                {
                    b.Navigation("ProjectParticipations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Person", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("AppointmentParticipations");

                    b.Navigation("MusicianProfiles");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Project", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ProjectAppointments");

                    b.Navigation("ProjectParticipations");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Region", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Room", b =>
                {
                    b.Navigation("AppointmentRooms");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Section", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("MusicianProfiles");

                    b.Navigation("SectionAppointments");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValue", b =>
                {
                    b.Navigation("SelectValueMappings");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueCategory", b =>
                {
                    b.Navigation("SelectValueMappings");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.SelectValueMapping", b =>
                {
                    b.Navigation("AppointmentParticipationsAsPrediction");

                    b.Navigation("AppointmentParticipationsAsResult");

                    b.Navigation("AppointmentsAsCategory");

                    b.Navigation("AppointmentsAsEmolument");

                    b.Navigation("AppointmentsAsEmolumentPattern");

                    b.Navigation("AppointmentsAsExpectation");

                    b.Navigation("AppointmentsAsStatus");

                    b.Navigation("PersonAddresses");

                    b.Navigation("ProjectsAsGenre");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Orso.Arpa.Domain.Entities.Venue", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
