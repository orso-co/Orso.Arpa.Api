{
    "Logging": {
        "IncludeScopes": false,
        "LogLevel": {
            "Default": "Trace",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information",
            "Microsoft.EntityFrameworkCore.Database.Command": "Debug"
        },
        "NLog": {
            "IncludeScopes": true,
            "RemoveLoggerFactoryFilter": true
        }
    },
    "NLog": {
        "autoReload": true,
        "throwConfigExceptions": true,
        "internalLogLevel": "Info",
        "internalLogFile": "${basedir}/internal-nlog.txt",
        "extensions": [
            { "assembly": "NLog.Extensions.Logging" },
            { "assembly": "NLog.Web.AspNetCore" }            
        ],
        "default-wrapper": {
            "type": "AsyncWrapper",
            "overflowAction": "Block"
        },
        "targets": {
            "async":  true,
            "consoleTarget": {
                "type": "Console",
                "layout": "${longdate}|${uppercase:${level}}|${event-properties:item=EventId_Id}|${logger}|${message}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|exception: ${exception:format=tostring}"
            }
        },
        "rules": {
            "01_Microsoft": {
                "logger": "Microsoft.*",
                "maxLevel": "Info",
                "final": true
            },
            "02_AllLog": {
                "logger": "*",
                "minLevel": "Debug",
                "writeTo": "consoleTarget",
            }
        }
    },
    "ConnectionStrings": {
        "PostgreSQLConnection": "host=localhost;database=orso-arpa;User Id=postgres;Password=postgres;Include Error Detail=true;"
    },
    "EmailConfiguration": {
        "From": "dev@arpa.orso.co",
        "SmtpServer": "localhost",
        "Port": 25,
        "Username": "",
        "Password": "",
        "DefaultSubject": "Message from ARPA"
    },
    "JwtConfiguration": {
        "TokenKey": "479F95A8-45F0-410E-90D9-C162B87806B2",
        "Issuer": "https://localhost:5001",
        "Audience": "http://localhost:4200",
        "AccessTokenExpiryInMinutes": 480,
        "RefreshTokenExpiryInDays": 7
    },
    "IdentityConfiguration": {
        "LockoutExpiryInMinutes": 1,
        "MaxFailedLoginAttempts": 3,
        "EmailConfirmationTokenExpiryInDays": 3,
        "DataProtectionTokenExpiryInHours": 2
    },
    "CorsConfiguration": {
        "AllowedOrigins": [
            "https://orsoarpastorage.z1.web.core.windows.net",
            "http://localhost:4200"
        ]
    },
    "ClubConfiguration": {
        "Name": "ORSO â€“ Orchestra & Choral Society Freiburg | Berlin e. V.",
        "Address": "Schwarzwaldstr. 9-11, 79117 Freiburg",
        "ContactEmail": "mail@orso.co",
        "Phone": "+4907617073203"
    },
    "LocalizationConfiguration": {
        "DefaultCulture": "en",
        "SupportedUiCultures": [
            "en",
            "de"
        ],
        "FallbackToParentCulture": true
    },
    "SeedConfiguration": {
        "SeedInitialAdmin": true,
        "InitialAdmin": {
            "UserName": "admin",
            "Email": "admin@admin.admin",
            "Password": "Pa$$w0rd",
            "GivenName": "Initial",
            "Surname": "Admin",
            "GenderId": "88d680fe-b6cc-486f-8f79-2525189b8b13"
        }
    },
    "IpRateLimiting": {
        "EnableEndpointRateLimiting": true,
        "StackBlockedRequests": true,
        "EndpointWhitelist": [ "options:*", "post:/graphql" ],
        "HttpStatusCode": 429,
        "GeneralRules": [
            {
                "Endpoint": "((post)|(put)|(delete)):*",
                "Period": "1s",
                "Limit": 1
            },
            {
                "Endpoint": "get:*",
                "Period": "1s",
                "Limit": 10
            },
            {
                "Endpoint": "*",
                "Period": "15m",
                "Limit": 100
            },
            {
                "Endpoint": "*",
                "Period": "12h",
                "Limit": 1000
            },
            {
                "Endpoint": "*",
                "Period": "7d",
                "Limit": 10000
            }
        ]
    },
    "IpRateLimitPolicies": {
        "IpRules": []
    }
}
