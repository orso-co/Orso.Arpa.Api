
name: SonarCloud	
on:	
  push:	
    branches:	
      - develop	
  pull_request:	
    branches:	
      - develop	
jobs:	
  build:	
    name: Build and run sonar analysis
    runs-on: windows-latest	
    steps:	
      - name: Set up JDK 17	
        uses: actions/setup-java@v3	
        with:	
          java-version: 17	
          distribution: 'zulu' # Alternative distribution options are available.	
      - uses: actions/checkout@v3	
        with:	
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis	
      - name: Cache SonarCloud packages	
        uses: actions/cache@v3	
        with:	
          path: ~\sonar\cache	
          key: ${{ runner.os }}-sonar	
          restore-keys: ${{ runner.os }}-sonar	
      - name: Cache SonarCloud scanner	
        id: cache-sonar-scanner	
        uses: actions/cache@v3	
        with:	
          path: .\.sonar\scanner	
          key: ${{ runner.os }}-sonar-scanner	
          restore-keys: ${{ runner.os }}-sonar-scanner	
      - name: Install SonarCloud scanner	
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'	
        shell: powershell	
        run: |	
          New-Item -Path .\.sonar\scanner -ItemType Directory	
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner	
      - name: Start Sonar Analysis	
        env:	
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any	
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}	
        shell: powershell	
        run: |	
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"orso-co_Orso.Arpa.Api" /o:"orso-co" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"	
      - name: Setup .NET 7	
        uses: actions/setup-dotnet@v3	
        with:	
          dotnet-version: 7.0.x	
      - name: Clean	
        run: dotnet clean ./Orso.Arpa.Api.sln --configuration Release && dotnet nuget locals all --clear	
      - name: Restore dependencies	
        run: dotnet restore	
      - name: Build	
        run: dotnet build --no-restore --configuration Release	
      - name: End Sonar Analysis	
        env:	
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any	
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}	
        shell: powershell	
        run: |	
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"	
