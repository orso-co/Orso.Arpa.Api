# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  repositories:
  - repository: Frontend
    type: github
    endpoint: Azure Devops OrsoDevOps
    name: orso-co/Orso.Arpa.Web.Dev
    ref: develop
    trigger:
    - develop
    
trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  backendWorkingDirectory: '$(AGENT.BUILDDIRECTORY)\Backend'
  frontendWorkingDirectory: '$(AGENT.BUILDDIRECTORY)\Frontend'
  solution: 'Backend\**\*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  frontendOutputPath: '..\a\$(SYSTEM_TEAMPROJECT)\bin\$(buildConfiguration)\net5.0\wwwroot'
  stage: 'dev'
  targetFramework: '5.0'

steps:
- checkout: self
  path: 'Backend'
- checkout: Frontend
  path: 'Frontend'
- task: Bash@3
  displayName: Print variables
  inputs:
    targetType: 'inline'
    script: 'env | sort'
- task: UseDotNet@2
  displayName: Use .NET SDK $(targetFramework).x
  inputs:
    packageType: 'sdk'
    version: '$(targetFramework).x'
- task: DotNetCoreCLI@2
  displayName: Restore Backend
  inputs:
    command: restore
    projects: '$(backendWorkingDirectory)/**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build Backend
  inputs:
    command: build
    projects: '$(backendWorkingDirectory)/**/$(SYSTEM_TEAMPROJECT).csproj'
    arguments: --configuration $(BuildConfiguration) --no-restore
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    projects: '$(backendWorkingDirectory)/**/$(SYSTEM_TEAMPROJECT).csproj'
    publishWebProjects: false
    arguments: --configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)"
    zipAfterPublish: false
- task: NodeTool@0
  inputs:
    versionSpec: '16.10'
  displayName: 'Install Node.js'
- script: npm install
  displayName: 'Install Frontend Dependencies'
  workingDirectory: $(frontendWorkingDirectory)
- script: npx ng build --configuration dev --output-path $(frontendOutputPath)
  displayName: 'Build'
  workingDirectory: $(frontendWorkingDirectory)
- task: PowerShell@2
  displayName: List Files
  inputs:
    targetType: 'inline'
    script: 'tree /f $(build.artifactstagingdirectory)'
    failOnStderr: true
    showWarnings: true
- task: ArchiveFiles@2
  displayName: Create .zip File
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(SYSTEM_TEAMPROJECT).zip'
    replaceExistingArchive: true
    verbose: true
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    ArtifactName: 'orso-arpa-$(stage)'
    TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
